{"version":3,"sources":["n1-main/m1-ui/components/LearnPage/Learn.module.scss","n1-main/m1-ui/components/Packs/Packs.module.scss","n1-main/m1-ui/common/c5-Paginator/Paginator.module.scss","n1-main/m1-ui/components/Login/Login.module.scss","n1-main/m1-ui/common/alternative/InputField/inputField.module.scss","n1-main/m1-ui/components/Forgot/Forgot.module.scss","n1-main/m1-ui/components/Packs/PackModal.module.css","n1-main/m1-ui/components/CardsSwitch/CardsSwitch.module.scss","n1-main/m1-ui/components/Cards/CardsTable.module.scss","n1-main/m1-ui/components/CheckEmail/CheckEmail.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/common/Search/Search.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.scss","n1-main/m1-ui/common/Sort/Sort.module.scss","n1-main/m1-ui/components/Register/register.module.scss","n1-main/m1-ui/common/c4-Preloader/Preloader.module.css","n1-main/m1-ui/components/NewPassword/NewPassword.module.scss","n1-main/m1-ui/common/SnackBar/SnackBar.module.scss","n1-main/m1-ui/components/PersonalInformation/PersonalInformation.module.scss","n1-main/m1-ui/common/alternative/Button/ButtonNya.module.scss","n1-main/m1-ui/common/Backdrop/Bacdrop.module.scss","n1-main/m1-ui/components/Profile/Profile.module.scss","n1-main/m1-ui/components/Packs/Pack.module.css","n1-main/m1-ui/components/Pagination/Pagination.module.scss","n1-main/m2-bll/events.ts","n3-styles/images/arrow.svg","n1-main/m1-ui/common/c5-Paginator/Paginator.tsx","n1-main/m2-bll/r3-packs/packsActions.ts","n1-main/m3-dal/axios.ts","n1-main/m3-dal/packsAPI.ts","n1-main/m2-bll/r5-findPagination/findPaginationAction.ts","n1-main/m2-bll/r3-packs/packsThunk.ts","n1-main/m2-bll/r5-findPagination/findPaginationThunk.ts","n1-main/m1-ui/common/Sort/Sort.tsx","n1-main/m1-ui/components/CardsSwitch/CardsSwitch.tsx","n2-features/f0-test/Test.tsx","n1-main/m1-ui/common/alternative/InputField/InputField.tsx","n1-main/m1-ui/common/alternative/Button/ButtonNya.tsx","n1-main/m1-ui/components/Register/Register.tsx","n1-main/m3-dal/authAPI.ts","n1-main/m2-bll/r2-auth/authReducer.ts","n1-main/m2-bll/r2-auth/authInitState.ts","n1-main/m2-bll/r2-auth/authThunk.ts","n1-main/m1-ui/common/Backdrop/Backdrop.tsx","n1-main/m1-ui/common/c4-Preloader/Preloader.tsx","n1-main/m1-ui/components/Register/RegisterContainer.tsx","n1-main/m1-ui/components/Register/Registration.tsx","n1-main/m1-ui/common/alternative/CheckBox/CheckBox.tsx","n1-main/m1-ui/components/Login/Login.tsx","n1-main/m1-ui/components/Login/LoginContainer.tsx","n1-main/m1-ui/components/Login/LoginPage.tsx","n4-hoc/WithAuthRedirect.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/components/Profile/Profile.tsx","n1-main/m1-ui/components/Forgot/Forgot.tsx","n3-styles/images/email.svg","n1-main/m1-ui/components/CheckEmail/CheckEmail.tsx","n1-main/m1-ui/components/Forgot/ForgotContainer.tsx","n1-main/m1-ui/components/Forgot/ForgotPage.tsx","n1-main/m1-ui/components/NewPassword/NewPassword.tsx","n1-main/m1-ui/components/NewPassword/NewPasswordContainer.tsx","n1-main/m1-ui/components/NewPassword/NewPasswordPage.tsx","n1-main/m2-bll/r1-app/appActions.ts","n1-main/m1-ui/components/Cards/Card.tsx","n1-main/m2-bll/r4-cards/cardsActions.ts","n1-main/m3-dal/cardsAPI.ts","n1-main/m2-bll/r4-cards/cardsThunk.ts","n3-styles/images/long_arrow.svg","n1-main/m1-ui/components/Packs/PackModal.tsx","n1-main/m1-ui/components/Cards/CardsTable.tsx","n1-main/m1-ui/components/Packs/Pack.tsx","n1-main/m1-ui/components/PriceRange/PriceRange.tsx","n1-main/m1-ui/components/PriceRange/PriceRangeContainer.tsx","n1-main/m1-ui/common/select/SuperSelect.tsx","n1-main/m1-ui/common/select/SuperSelectContainer.tsx","n1-main/m1-ui/components/Pagination/Pagination.tsx","n3-styles/images/Search.svg","n1-main/m1-ui/common/Search/Search.tsx","n1-main/m1-ui/common/Search/SearchContainer.tsx","n1-main/m1-ui/components/Packs/Packs.tsx","n1-main/m1-ui/components/Packs/PacksPage.tsx","n1-main/m1-ui/common/SnackBar/SnackBar.tsx","n1-main/m1-ui/common/SnackBar/SnackBarContainer.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/components/LearnPage/Learn.tsx","n3-styles/images/packsListLinkIcon.svg","n3-styles/images/profileListLinkIcon.svg","n1-main/m1-ui/components/HeaderMain/HeaderMain.tsx","n3-styles/images/avatar.png","n1-main/m1-ui/components/PersonalInformation/PersonalInformation.tsx","n1-main/m1-ui/components/PersonalInformation/PersonalInformationContainer.tsx","n1-main/m1-ui/components/PersonalInformation/PersonalInformationPage.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/r1-app/appThunk.ts","reportWebVitals.ts","n1-main/m2-bll/r1-app/appInitState.ts","n1-main/m2-bll/r3-packs/packsInitialState.ts","n1-main/m2-bll/r5-findPagination/findPaginationInitialState.ts","n1-main/m2-bll/r4-cards/cardsInitialState.ts","n1-main/m2-bll/store.ts","n1-main/m2-bll/r1-app/appReducer.ts","n1-main/m2-bll/r3-packs/packsReducer.ts","n1-main/m2-bll/r5-findPagination/findPaginationReducer.ts","n1-main/m2-bll/r4-cards/cardsReducer.ts","index.tsx"],"names":["module","exports","AppEvents","AuthEvents","PacksEvents","CardsEvents","FindPaginationEvents","Paginator","portionSize","pageSize","totalCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","min","max","className","styles","root","disabled","onClick","arrow","arrow_left","src","alt","arrow_img","style","display","filter","p","map","page","page__active","marginRight","marginLeft","length","arrow_right","packsActions","cardPacks","type","SET_CARD_PACKS","isLoading","SET_CARD_PACKS_LOADING","instance","axios","create","baseURL","withCredentials","packsAPI","getCardPacks","productName","minPrice","maxPrice","pageCount","direction","sortObject","user_id","a","get","response","data","addNewPack","params","post","cardsPack","deleteCardPack","id","delete","editCardPack","pack","put","findPaginationActions","SET_PRODUCT_NAME","SET_MIN_MAX","SET_PAGE_COUNT","cardPacksTotalCount","SET_CARD_PACKS_TOTAL_COUNT","SET_CURRENT_PAGE","SET_SORT","dispatch","getState","state","findPagination","res","console","log","setSortTC","Sort","props","useDispatch","dir","setDir","up","down","CardsSwitch","user","useSelector","auth","packs","activeAll","setAllActive","activeMy","setMyActive","title","_id","btn","active","Test","setP","InputField","field","form","touched","errors","placeholder","label","errorMsg","name","input_wrapper","error","input","ButtonNya","finalClassName","buttonNya","Register","handleSubmit","handleReset","loading","onSubmit","onReset","component","button_wrapper","authAPI","me","info","avatar","logout","logIn","email","password","rememberMe","register","payload","recoverPass","from","message","setNewPass","resetPasswordToken","slice","createSlice","initialState","forgotStatus","registerStatus","isPasswordChanged","isLogin","reducers","setUserData","action","setLoading","predicate","setError","logoutAC","setLoginStatus","setRegisterStatus","status","setForgotStatus","setPasswordChange","authReducer","reducer","actions","setErrorTC","Backdrop","React","memo","children","Preloader","overlay_loader","loader","RegisterContainer","history","useHistory","to","initialValues","password2","validate","values","test","Registration","CheckBox","checkbox","Login","checkbox_wrapper","forgotLinkWrapper","forgotLink","button","signUpTitle","signUpLink","LoginContainer","loginTC","LoginPage","WithAuthRedirect","app","Fragment","SuperButton","red","restProps","s","default","ProfileContainer","onClickHandler","profile_container","Profile","Forgot","description","remember","loginLink","CheckEmail","image_wrapper","ForgotContainer","ForgotPage","NewPassword","width","flexDirection","NewPasswordContainer","token","useParams","NewPasswordPage","appActions","SET_APP_LOADING","SET_APP_SUCCESS","SET_APP_ERROR","Card","classForDeleteButton","packUserId","myId","classForEditButton","question","answer","updated","grade","showDeleteCardModal","cardPackId","cardId","showEditCardModal","cardsActions","cardsInfo","SET_CARDS","SET_CARDS_LOADING","cardsAPI","getCards","deleteCard","createNewCard","card","editCard","changeGradeCard","card_id","cardsPack_id","PackModal","setActive","classForModal","modal","classForModalContent","modalContent","e","stopPropagation","CardsTableContainer","cardQuestion","setCardQuestion","cardAnswer","setCardAnswer","modalCardAddActive","setModalCardAddActive","modalCardEditActive","setModalCardEditActive","modalCardDeleteActive","setModalCardDeleteActive","setCardPackId","setCardId","cards","useEffect","changeCardQuestionHandler","currentTarget","value","changeCardAnswerHandler","container","img","table","packsTable","c","createdBy","textAlign","fontWeight","onChange","cardPack_id","CardsTable","Pack","cardsCount","lastUpdated","userName","setPackId","setModalDeletePackActive","setModalEditPackActive","setEditablePackId","userAuthId","split","reverse","join","PriceRange","maxCount","minCount","setValues","step","renderTrack","onMouseDown","onTouchStart","height","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","outline","backgroundColor","justifyContent","alignItems","border","position","top","color","lineHeight","fontSize","fontFamily","padding","toFixed","PriceRangeContainer","maxCardsCount","SuperSelect","options","onChangeOption","mappedOptions","o","arr","SuperSelectContainer","Pagination","setCurrentPageTC","Search","inputValueHandler","doSearch","search","SearchContainer","SetProductNameTC","Packs","modalDeletePackActive","modalAddPackActive","setModalAddPackActive","modalEditPackActive","editablePackID","newPackName","setNewPackName","deletedPackId","setDeletedPackId","changeNewPackNameHandler","packs_container","description_block","switch","range_title","packs_block","packs_title","block_controls","search_wrapper","spreadsheet_info","cp","user_name","packs_row","packForEdit","find","packAfterEdit","editCardsPack","PacksPage","SnackBar","onClose","finallyClassName","close","SnackBarContainer","SuperCheckbox","onChangeChecked","spanClassName","finalInputClassName","checked","grades","getCard","sum","reduce","acc","rand","random","newSum","LearnPageContainer","isChecked","setIsChecked","first","setFirst","store","isBtnChecked","setIsBtnChecked","onRadioHandler","setCard","gradeCard","gradeCardTC","learn_form","description_wrapper","description_title","rate","g","radio_btn","HeaderMain","activeClassName","paksListIcon","profileIcon","PersonalInformation","img_wrapper","PersonalInformationContainer","updatedUser","PersonalInformationPage","App","setTimeout","path","render","Learn","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","successInitializing","packsInitialState","packsType","minCardsCount","FindPaginationInitialState","cardsInitialState","cardsTotalCount","maxGrade","minGrade","rootReducer","combineReducers","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd7fdcca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Learn_root__vwevW\",\"button_wrapper\":\"Learn_button_wrapper__1tITW\",\"learn_form\":\"Learn_learn_form__2Guxe\",\"title\":\"Learn_title__3jyg0\",\"description_wrapper\":\"Learn_description_wrapper__tbkhm\",\"description\":\"Learn_description__1TPgd\",\"description_title\":\"Learn_description_title__2yci0\",\"rate\":\"Learn_rate__3cSuJ\",\"radio_btn\":\"Learn_radio_btn__2gYQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packs_container\":\"Packs_packs_container__1XdDg\",\"description_block\":\"Packs_description_block__3hR4Z\",\"packs_block\":\"Packs_packs_block__A-iOu\",\"switch\":\"Packs_switch__395Cg\",\"range_title\":\"Packs_range_title__1sNPP\",\"block_controls\":\"Packs_block_controls__2OFZT\",\"search_wrapper\":\"Packs_search_wrapper__fti9L\",\"table\":\"Packs_table__2col4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Paginator_root__2nxgc\",\"page\":\"Paginator_page__D3h5b\",\"page__active\":\"Paginator_page__active__X_6Lp\",\"arrow\":\"Paginator_arrow__GfgL7\",\"arrow_img\":\"Paginator_arrow_img__3iLfY\",\"arrow_right\":\"Paginator_arrow_right__2qFF_\",\"arrow_left\":\"Paginator_arrow_left__f2w_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__3IkQU\",\"checkbox\":\"Login_checkbox__SM9o0\",\"checkbox_wrapper\":\"Login_checkbox_wrapper__a5Mjt\",\"forgotLink\":\"Login_forgotLink__2xnkj\",\"button\":\"Login_button__1MoGU\",\"signUpTitle\":\"Login_signUpTitle__Lq0DH\",\"signUpLink\":\"Login_signUpLink__8LqKA\",\"forgotLinkWrapper\":\"Login_forgotLinkWrapper__17SSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"inputField_label__3os6x\",\"title\":\"inputField_title__1VuuW\",\"input_wrapper\":\"inputField_input_wrapper__3jdiV\",\"input\":\"inputField_input__2KV60\",\"error\":\"inputField_error__1nb7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Forgot_root__1nlwf\",\"description\":\"Forgot_description__1egHG\",\"remember\":\"Forgot_remember__dp_F6\",\"loginLink\":\"Forgot_loginLink__2DbMO\",\"button\":\"Forgot_button__18Vpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"PackModal_modal__3p1aV\",\"active\":\"PackModal_active__30fg-\",\"modalContent\":\"PackModal_modalContent__TysMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"CardsSwitch_title__2hyOy\",\"btn\":\"CardsSwitch_btn__333t-\",\"active\":\"CardsSwitch_active__1wzzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsTable_container__2ua2J\",\"table\":\"CardsTable_table__1sB_u\",\"img\":\"CardsTable_img__I__x6\",\"btn\":\"CardsTable_btn__CHRKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CheckEmail_root__3h6W2\",\"image_wrapper\":\"CheckEmail_image_wrapper__3Pgsh\",\"title\":\"CheckEmail_title__3Mr3d\",\"description\":\"CheckEmail_description__1tKAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__I3X4Z\",\"red\":\"SuperButton_red__kF5xl\",\"button\":\"SuperButton_button__3Vm-1\",\"blink\":\"SuperButton_blink__3xJKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Search_root__DbUcb\",\"btn\":\"Search_btn__5LXxE\",\"input\":\"Search_input__2zSfb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__N4bCV\",\"checkbox\":\"SuperCheckbox_checkbox__349bl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"up\":\"Sort_up__2MX9K\",\"down\":\"Sort_down__E2wbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"register_root__f9ZTx\",\"form\":\"register_form__3bfoW\",\"error_message\":\"register_error_message__3W_8v\",\"button_wrapper\":\"register_button_wrapper__2p-mc\",\"cancel_button\":\"register_cancel_button__8dj4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay_loader\":\"Preloader_overlay_loader__2OHPN\",\"loader\":\"Preloader_loader__1jD5a\",\"rotateAnim\":\"Preloader_rotateAnim__2iVUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NewPassword_root__2tD-3\",\"description\":\"NewPassword_description__2TMNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SnackBar_root__1ZF2v\",\"close\":\"SnackBar_close__3s3wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PersonalInformation_root__2Gt65\",\"img_wrapper\":\"PersonalInformation_img_wrapper__28Tc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNya\":\"ButtonNya_buttonNya__3RMVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Bacdrop_root__byRxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_container\":\"Profile_profile_container__29MEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pack\":\"Pack_pack__YJ4HD\",\"pack_button\":\"Pack_pack_button__1QQWb\",\"pack_delete__button\":\"Pack_pack_delete__button__3jAlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Pagination_root__33ATs\"};","export enum AppEvents {\n    SET_APP_LOADING = 'SET_APP_LOADING',\n    SET_APP_SUCCESS = 'SET_APP_SUCCESS',\n    SET_APP_ERROR = 'SET_APP_ERROR'\n}\n\nexport enum AuthEvents {\n    SET_USER_DATA = 'SET_USER_DATA',\n    LOGOUT = 'LOGOUT',\n    SET_LOADING = 'SET_LOADING',\n    SET_SUCCESS = 'SET_SUCCESS',\n    SET_ERROR = 'SET_ERROR',\n    SET_LOGIN_STATUS = 'SET_LOGIN_SUCCESS',\n    SET_REGISTER_STATUS = 'SET_REGISTER_STATUS',\n    SET_FORGOT_STATUS = 'SET_FORGOT_STATUS',\n    SET_PASSWORD_CHANGE  = 'SET_PASSWORD_CHANGE'\n}\n\n\nexport enum PacksEvents {\n    SET_CARD_PACKS = 'SET_CARD_PACKS',\n    SET_CARD_PACKS_LOADING = 'SET_CARD_PACKS_LOADING'\n}\n\nexport enum CardsEvents {\n    SET_CARDS= 'SET_CARDS',\n    SET_CARDS_LOADING='SET_CARDS_LOADING'\n}\n\n\nexport enum FindPaginationEvents {\n    SET_PRODUCT_NAME = 'FIND-PAGINATION/SET-PRODUCT-NAME',\n    SET_MIN_MAX = 'FIND-PAGINATION/SET-MIN-MAX',\n    SET_PAGE_COUNT = 'FIND-PAGINATION/SET-PAGE-COUNT',\n    SET_CARD_PACKS_TOTAL_COUNT = 'FIND-PAGINATION/SET-CARD-PACKS-TOTAL-COUNT',\n    SET_CURRENT_PAGE = 'FIND-PAGINATION/SET-CURRENT-PAGE',\n    SET_SORT = 'FIND-PAGINATION/SET-SORT'\n}","export default __webpack_public_path__ + \"static/media/arrow.4a08dd6e.svg\";","import React, {useState} from 'react'\nimport styles from './Paginator.module.scss'\nimport arrow from '../../../../n3-styles/images/arrow.svg'\n\n\nexport type PaginatorPropsType = {\n    currentPage: number\n    portionSize?: number\n    pageSize: number\n    totalCount: number\n    onPageChange: (pageNumber: number) => void\n}\n\nexport const Paginator: React.FC<PaginatorPropsType>\n    = ({\n           portionSize = 5,\n           pageSize ,\n           totalCount ,\n           currentPage ,\n           onPageChange\n       }) => {\n\n    const pagesCount = Math.ceil(totalCount / pageSize)\n\n    const pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(pagesCount / portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const min = (portionNumber - 1) * portionSize + 1;\n    const max = portionNumber * portionSize\n\n\n    return <div className={styles.root}>\n        {\n\n            <button disabled={portionNumber <= 1} onClick={() => setPortionNumber(portionNumber - 1)}\n                    className={`${styles.arrow} ${styles.arrow_left}`}>\n                <img src={arrow} alt=\"LEFT\" className={styles.arrow_img}/>\n            </button>\n        }\n        <div style={{display: 'flex'}}>\n            {\n                pages\n                    .filter(p => p >= min && p <= max)\n                    .map(p => <div key={p} className={`${styles.page} ${p === currentPage && styles.page__active}`}\n                                   onClick={() => onPageChange(p)}>{p}</div>)\n            }\n            {portionCount > portionNumber && <div style={{marginRight: '12px', marginLeft: '12px'}}>...</div>}\n            {portionCount > portionNumber &&\n            <div className={`${styles.page} ${pages.length === currentPage && styles.page__active} `} onClick={() => onPageChange(pages.length)}>{pages.length}</div>}\n        </div>\n            <button disabled={portionCount <= portionNumber} onClick={() => setPortionNumber(portionNumber + 1)}\n                 className={`${styles.arrow} ${styles.arrow_right}`}>\n                <img src={arrow} alt=\"RIGHT\" className={styles.arrow_img}/>\n            </button>\n    </div>\n}","import {CardPacksType} from \"./packsInitialState\";\nimport {PacksEvents} from '../events';\nimport {InferActionsType} from '../ActionsType';\n\nexport type PacksActionsType = InferActionsType<typeof packsActions>\n\nexport const packsActions = {\n    setCardsPacks: (cardPacks: Array<CardPacksType>) => {\n        return {\n            type: PacksEvents.SET_CARD_PACKS,\n            cardPacks\n        } as const\n    },\n    seIsLoading: (isLoading: boolean) => {\n        return {\n            type: PacksEvents.SET_CARD_PACKS_LOADING,\n            isLoading\n        } as const\n    }\n}","import axios from \"axios\";\nimport {DEV_VERSION} from '../../config';\n\n\nexport const baseURL = !DEV_VERSION\n    ? 'http://localhost:7542/2.0/'\n    : 'https://neko-back.herokuapp.com/2.0/';\n\nexport const instance = axios.create({\n    baseURL: baseURL,\n    withCredentials: true\n})","import {instance} from './axios';\nimport {CommonResponseType} from './cardsAPI';\n\nexport type PackType = {\n    _id: string,\n    user_id: string,\n    user_name: string,\n    private: boolean,\n    name: string,\n    path: string,\n    grade: number,\n    shots: number,\n    cardsCount: number,\n    type: string,\n    rating: number,\n    created: string,\n    updated: string,\n    more_id: string,\n    __v: number\n}\nexport type GetCardPacksResponseType = {\n    cardPacks: Array<PackType>\n    cardPacksTotalCount: number,\n    minCardsCount: number,\n    maxCardsCount: number\n    page: number,\n    pageCount: number,\n\n}\n\n\nexport type ParametersForCreatePackType = {\n    name?: string\n    path?: string\n    grade?: number\n    shots?: number\n    rating?: number\n    deckCover?: string\n    private?: boolean\n    type?: string\n}\n\nexport type ParametersForGetPacksType = {\n    packName: string\n    min: number\n    max: number\n    pageCount: number\n    page: number\n    direction: number\n    sortObject: string\n}\n\nexport const packsAPI = {\n    getCardPacks: async (productName: string, minPrice:number, maxPrice:number, pageCount:number, page:number, direction:number, sortObject:string, user_id?:string) => {\n        const response = await instance.get<CommonResponseType & GetCardPacksResponseType>(`cards/pack?packName=${productName}&min=${minPrice}&max=${maxPrice}&sortPacks=${direction}${sortObject}&page=${page}&pageCount=${pageCount}&user_id=${user_id}`);\n        return response.data\n    },\n    addNewPack: async (params: ParametersForCreatePackType) => {\n        const response = await instance.post<CommonResponseType & {newCardsPack : PackType}>(`cards/pack`, {cardsPack: params});\n        return response.data\n    },\n    deleteCardPack: async (id: string) => {\n        const response = await instance.delete<CommonResponseType & {deletedCardsPack : PackType}>(`cards/pack?id=${id}`);\n        return response.data\n    },\n    editCardPack: async (pack: PackType) => {\n        const response = await instance.put<CommonResponseType & {updatedCardsPack : PackType}>(`cards/pack`, {cardsPack: pack})\n        return response.data\n    }\n}","import {FindPaginationEvents} from '../events';\nimport {InferActionsType} from '../ActionsType';\n\nexport type FindPaginationActionsType = InferActionsType<typeof findPaginationActions>\n\n\n\nexport const findPaginationActions = {\n    setProductNameAC: (productName: string) => {\n        return {\n            type: FindPaginationEvents.SET_PRODUCT_NAME, productName\n        } as const\n    },\n    setMinMaxAC: (minPrice: number, maxPrice: number) => {\n        return {\n            type: FindPaginationEvents.SET_MIN_MAX, minPrice, maxPrice\n        } as const\n    },\n    setPageCountAC: (pageCount: number) => {\n        return {\n            type: FindPaginationEvents.SET_PAGE_COUNT, pageCount\n        } as const\n    },\n\n    setCardsPacksTotalCountAC: (cardPacksTotalCount: number) => {\n        return {\n            type: FindPaginationEvents.SET_CARD_PACKS_TOTAL_COUNT,\n            cardPacksTotalCount\n        } as const\n    },\n\n    setCurrentPageAC: (page: number) => {\n        return {\n            type: FindPaginationEvents.SET_CURRENT_PAGE, page\n        } as const\n    },\n\n    setSortAC: (direction: number, sortObject: string) => {\n        return {\n            type: FindPaginationEvents.SET_SORT,\n            direction,\n            sortObject\n        } as const\n    }\n\n}","import {packsActions, PacksActionsType} from './packsActions';\nimport {AppRootStateType} from '../store';\nimport {ThunkAction} from 'redux-thunk';\nimport {packsAPI, ParametersForCreatePackType} from '../../m3-dal/packsAPI';\nimport {findPaginationActions, FindPaginationActionsType} from '../r5-findPagination/findPaginationAction';\n\n\nexport const getCardPacks = (user_id?:string): ThunkAction<void, AppRootStateType, {}, PacksActionsType | FindPaginationActionsType> => async (dispatch, getState) => {\n    dispatch(packsActions.seIsLoading(true))\n    const state = getState()\n    const {productName, minPrice, maxPrice, pageCount, page, direction, sortObject} = state.findPagination\n    try {\n\n        const id = user_id? user_id : ''\n\n        const res = await packsAPI.getCardPacks(productName, minPrice, maxPrice, pageCount, page, direction, sortObject, id);\n        dispatch(packsActions.setCardsPacks(res.cardPacks))\n        //сетается значение максимального количества страниц, используется для отрисовки кол-ва страниц в пагинаторе\n        dispatch(findPaginationActions.setCardsPacksTotalCountAC(res.cardPacksTotalCount))\n    } catch (e) {\n        console.log('Packs error: ', {...e})\n    } finally {\n        dispatch(packsActions.seIsLoading(false))\n    }\n}\n\nexport const addNewCardPack = (params: ParametersForCreatePackType): ThunkAction<void, AppRootStateType, {}, PacksActionsType> =>\n    async (dispatch) => {\n    dispatch(packsActions.seIsLoading(true))\n        try {\n            await packsAPI.addNewPack(params);\n            dispatch(getCardPacks())\n        } catch (e) {\n            console.log('ADD_CARD_ERROR: ', {...e})\n        } finally {\n            dispatch(packsActions.seIsLoading(false))\n        }\n    }\n\nexport const deleteCardPack = (id: string): ThunkAction<void, AppRootStateType, {}, PacksActionsType> =>\n    async (dispatch) => {\n        dispatch(packsActions.seIsLoading(true))\n        try {\n            await packsAPI.deleteCardPack(id);\n            dispatch(getCardPacks())\n        } catch (e) {\n            console.log('ADD_CARD_ERROR: ', {...e})\n        } finally {\n            dispatch(packsActions.seIsLoading(false))\n        }\n    }\n\nexport const editCardsPack = (_id: string, name: string = 'some name'): ThunkAction<void, AppRootStateType, {}, PacksActionsType> =>\n    async (dispatch, getState: () => AppRootStateType) => {\n        const state = getState();\n        const packForEdit = state.packs.cardPacks.find(pack => pack._id === _id);\n        if (packForEdit) {\n            const packAfterEdit = {...packForEdit, name}\n            try {\n                await packsAPI.editCardPack(packAfterEdit)\n                dispatch(getCardPacks())\n            } catch (e) {\n                console.log('EDIT_PACK_ERROR: ', {...e})\n            }\n        }\n    }","import {Dispatch} from 'redux';\nimport {getCardPacks} from '../r3-packs/packsThunk';\nimport {findPaginationActions, FindPaginationActionsType} from './findPaginationAction';\nimport {ThunkAction} from 'redux-thunk';\nimport {AppRootStateType} from '../store';\n\nexport const SetProductNameTC = (productName: string) => (dispatch: Dispatch) => {\n    dispatch(findPaginationActions.setProductNameAC(productName))\n}\n\n\nexport const setMinMaxTC = (minPrice: number, maxPrice: number): ThunkAction<void, AppRootStateType, {}, FindPaginationActionsType> => (dispatch) => {\n    dispatch(findPaginationActions.setMinMaxAC(minPrice, maxPrice))\n}\n\nexport const setPageCountTC = (pageCount: number): ThunkAction<void, AppRootStateType, {}, FindPaginationActionsType> => (dispatch) => {\n    dispatch(findPaginationActions.setPageCountAC(pageCount))\n    dispatch(getCardPacks())\n}\n\nexport const setCurrentPageTC = (currentPage: number): ThunkAction<void, AppRootStateType, {}, FindPaginationActionsType> => (dispatch) => {\n    dispatch(findPaginationActions.setCurrentPageAC(currentPage))\n    dispatch(getCardPacks())\n}\n\nexport const setSortTC = (direction: number, sortObject: string): ThunkAction<void, AppRootStateType, {}, FindPaginationActionsType> => (dispatch) => {\n    dispatch(findPaginationActions.setSortAC(direction, sortObject))\n    dispatch(getCardPacks())\n}\n\nexport const setUserId = (): ThunkAction<void, AppRootStateType, {}, FindPaginationActionsType> => (dispatch) => {\n    dispatch(getCardPacks())\n}","import React, {useState} from 'react'\nimport {useDispatch} from \"react-redux\";\nimport {setSortTC} from '../../../m2-bll/r5-findPagination/findPaginationThunk';\nimport styles from './Sort.module.scss'\n\ntype SortType = {\n    sortObject:string\n}\n\n\n\nexport const Sort = (props:SortType)=> {\n\n    const dispatch = useDispatch()\n    const [dir,setDir] = useState(false)\n\n    const sortUp = () => {\n        setDir(false)\n        dispatch( setSortTC(1, props.sortObject ) )\n    }\n\n    const sortDown = () => {\n        setDir(true)\n        dispatch( setSortTC(0, props.sortObject ) )\n    }\n\n    return (\n        <div>\n            {dir && <div onClick={sortUp} className={styles.up}></div>}\n            {!dir && <div onClick={sortDown} className={styles.down}></div>}\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getCardPacks} from \"../../../m2-bll/r3-packs/packsThunk\";\nimport {AppRootStateType} from \"../../../m2-bll/store\";\nimport {IUser} from \"../../../m2-bll/r2-auth/authInitState\";\nimport styles from './CardsSwitch.module.scss'\n\nexport const CardsSwitch = () => {\n\n    const dispatch = useDispatch()\n    let user = useSelector<AppRootStateType, IUser | null>(state=>state.auth.user)\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.packs.isLoading)\n\n\n\n    const [activeAll, setAllActive] = useState(true)\n    const [activeMy, setMyActive] = useState(false)\n\n\n    const showAllCards  = () => {\n        setAllActive(true)\n        setMyActive(false)\n        dispatch(getCardPacks())\n    }\n\n    const showMyCards = () => {\n        if (user) {\n            setAllActive(false)\n            setMyActive(true)\n            dispatch(getCardPacks(user._id))\n        }\n\n    }\n\n\n\n    return (\n        <div>\n            <div className={styles.title}>Show packs cards</div>\n            <div className={'button_wrapper'}>\n                <button onClick={showMyCards} className={`sqrBtn ${styles.btn} ${activeMy && styles.active}`} disabled={isLoading}>My</button>\n                <button onClick={showAllCards} className={`sqrBtn ${styles.btn} ${activeAll && styles.active}`} disabled={isLoading}>All</button>\n            </div>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport {Paginator} from '../../n1-main/m1-ui/common/c5-Paginator/Paginator';\nimport {Sort} from \"../../n1-main/m1-ui/common/Sort/Sort\";\nimport {CardsSwitch} from \"../../n1-main/m1-ui/components/CardsSwitch/CardsSwitch\";\n\nexport const Test = () => {\n    const [p,setP] = useState(1)\n    return(\n        <div>\n            <Paginator currentPage={p} pageSize={10} totalCount={131} onPageChange={(p)=> setP(p)}/>\n            <Sort sortObject={'updated'}/>\n            <CardsSwitch/>\n        </div>\n\n    )\n}","import React, {DetailedHTMLProps} from 'react';\nimport {FieldProps} from 'formik';\nimport styles from './inputField.module.scss'\n\ntype InputFieldPropsType = FieldProps & DetailedHTMLProps<any,any> & {\n    type?: string\n    placeholder?: string\n    label?:string\n}\n\nexport const InputField: React.FC<InputFieldPropsType> =\n    ({\n         field, // { name, value, onChange, onBlur }\n         form: {touched, errors}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc,\n         type,\n         placeholder,\n        label,\n        className,\n         ...props\n     }) => {\n\n\n        const errorMsg = touched[field.name] && errors[field.name]\n        return (\n            <label className={`${styles.label}`}>\n                <div className={`${styles.title}`}>{label}</div>\n                <div className={`${styles.input_wrapper}  ${errorMsg && styles.error}`}>\n                    <input className={`${styles.input}`} type={type} placeholder={placeholder} {...field} {...props}/>\n                </div>\n                {errorMsg && <div className={styles.error}>{errorMsg}</div>}\n            </label>\n\n        )\n    }\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport styles from './ButtonNya.module.scss'\n\n\ntype ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\n\nexport const ButtonNya: React.FC<ButtonNyaPropsType> = ({className, ...props}) => {\n\n\n    const finalClassName = `${styles.buttonNya} ${className}`\n\n\n    return (\n        <>\n            <button className={finalClassName} {...props} />\n        </>\n    );\n};","import React from 'react';\nimport {Field, Form, FormikProps} from 'formik';\nimport {InputField} from '../../../../n1-main/m1-ui/common/alternative/InputField/InputField';\nimport styles from './register.module.scss'\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\n\n\ntype RegisterPropsType = FormikProps<any> & {\n    error: string,\n    loading: boolean\n}\n\nexport const Register: React.FC<RegisterPropsType> = ({ handleSubmit, handleReset, error, loading }) => (\n    <div className={`${styles.root} container flex`}>\n        <Form className={'form'} onSubmit={handleSubmit} onReset={handleReset}>\n            <h2>it-incubator</h2>\n            <h3>Sign-up</h3>\n            <Field name={'email'} type={'email'} component={InputField} label={'Email'}/>\n            <Field name={'password'} type={'password'} component={InputField} label={'Password'}/>\n            <Field name={'password2'} type={'password'} component={InputField} label={'Confirm password'}/>\n            <div className={styles.button_wrapper}>\n                <ButtonNya type=\"reset\" disabled={loading} className={'cancel_button'}>Cancel</ButtonNya>\n                <ButtonNya type=\"submit\" disabled={loading} >Submit</ButtonNya>\n            </div>\n        </Form>\n    </div>\n);","import {IUser} from '../m2-bll/r2-auth/authInitState';\nimport {instance} from './axios';\n\n\nexport type DefaultResponse = {\n    info: string,\n    error?: string\n}\n\nexport  type RegisterResponse = {\n    addedUser: {},\n    error?: string\n}\n\n\n\nexport const authAPI = {\n    me: async () => {\n        const response = await instance.post<IUser>('auth/me')\n        return response.data\n    },\n    info: async (name?:string, avatar?:string) => {\n        const response = await instance.put<{updatedUser:IUser, error?:string}>('auth/me', {name,avatar})\n        return response.data\n    },\n    logout: async () => {\n        debugger\n        const response = await instance.delete<DefaultResponse>('auth/me')\n        console.log('LOGOUT: ', response.data)\n        return response.data\n    },\n    logIn: async (email: string, password: string, rememberMe: boolean) => {\n        const response = await instance.post<IUser>('auth/login', {email, password, rememberMe})\n        return response.data\n    },\n    register: async (payload: { email: string, password: string }) => {\n        const response = await instance.post<RegisterResponse>('auth/register', payload)\n        console.log('Register: ', response.data)\n        return response.data\n    },\n    recoverPass: async (email: string) => {\n        const response = await instance.post<DefaultResponse>(`auth/forgot`, {\n            email,\n            from: 'test-front-admin <ai73a@yandex.by>',\n            message: `<div style=\"background-color: lime; padding: 15px\"><a href='http://localhost:3000/#/new-password/$token$'>create new password</a></div>`\n        })\n        console.log('RECOVER: ', response.data)\n        return response.data\n    },\n    setNewPass: async (password: string, resetPasswordToken: string) => {\n        const response = await instance.post<DefaultResponse>(`auth/set-new-password`, {password, resetPasswordToken})\n        console.log('SETNEW: ', response.data)\n        return response.data\n    },\n}","import {AuthEvents} from '../events';\nimport {AuthStateType, initialState, IUser, StatusType} from './authInitState';\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\n\n\n\nconst slice = createSlice({\n    name: 'auth',\n    initialState: initialState,\n    reducers: {\n        setUserData(state, action:PayloadAction<IUser>) {\n            state.user = action.payload\n            state.loading = false\n            state.isLogin = true\n        },\n        setLoading(state, action:PayloadAction<{predicate:boolean}>) {\n            state.loading = action.payload.predicate\n        },\n        setError(state, action:PayloadAction<{error:string}>) {\n            state.error = action.payload.error\n            state.loading = false\n        },\n        logoutAC(state, action:any) {\n            debugger\n            state.loading = false\n            state.isLogin = false\n            state.user = null\n            state.error = ''\n        },\n        setLoginStatus(state, action:PayloadAction<{isLogin: boolean}>) {\n            state.isLogin = action.payload.isLogin\n            state.loading = false\n        },\n        setRegisterStatus(state, action:PayloadAction<{status:StatusType}>) {\n            state.registerStatus = action.payload.status\n            state.loading = false\n        },\n        setForgotStatus(state, action:PayloadAction<{status:StatusType}>) {\n        state.forgotStatus = action.payload.status\n            state.loading = false\n        },\n        setPasswordChange(state, action:PayloadAction<{isPasswordChanged: boolean}>){\n        state.isPasswordChanged  = action.payload.isPasswordChanged\n            state.loading = false\n        }\n\n    }\n})\n\nexport const authReducer = slice.reducer\n\nexport const {\n    setUserData,\n    setLoading,\n    setError,\n    logoutAC,\n    setLoginStatus,\n    setRegisterStatus,\n    setForgotStatus,\n    setPasswordChange\n} = slice.actions\n\n\n\n//\n// export const authReducer = (state = initialState, action: AuthActionsType): AuthStateType => {\n//     switch (action.type) {\n//         case AuthEvents.SET_USER_DATA:\n//             return {...state, user: action.payload, loading: false, isLogin: true}\n//         case AuthEvents.SET_LOADING:\n//             return {...state, loading: action.predicate}\n//         case AuthEvents.SET_ERROR:\n//             return {...state, error: action.error, loading: false}\n//         case AuthEvents.LOGOUT:\n//             return {...state, loading: false, isLogin: false, user: null, error:''}\n//         case AuthEvents.SET_LOGIN_STATUS :\n//             return {...state, isLogin: action.isLogin, loading: false}\n//         case AuthEvents.SET_REGISTER_STATUS :\n//             return {...state, registerStatus: action.status, loading: false}\n//         case AuthEvents.SET_FORGOT_STATUS :\n//             return {\n//                 ...state, forgotStatus: action.status, loading: false\n//             }\n//         case AuthEvents.SET_PASSWORD_CHANGE:\n//             return {\n//                 ...state, isPasswordChanged:action.isPasswordChanged, loading:false\n//             }\n//         default :\n//             return state\n//     }\n// }\n//\n\n\n\n","export type StatusType = 'success' | 'error' | 'idle'\n\nexport type  IUser = {\n    _id: string\n    email: string\n    name: string\n    token:string\n    tokenDeathTime:number\n    publicCardPacksCount: number\n    created: string\n    updated: string\n    isAdmin: boolean\n    verified: boolean\n    rememberMe: boolean\n}\n\nexport type AuthStateType = {\n    forgotStatus: StatusType\n    registerStatus: StatusType\n    isPasswordChanged: boolean\n    loading: boolean\n    isLogin: boolean\n    error: string\n    user: IUser | null\n}\n\n\nexport const initialState: AuthStateType = {\n    forgotStatus: 'idle',\n    registerStatus: 'idle',\n    isPasswordChanged: false,\n    loading: false,\n    isLogin: false,\n    error: '',\n    user: null\n}","import {ThunkAction} from 'redux-thunk';\nimport {AppRootStateType} from '../store';\nimport {authAPI} from '../../m3-dal/authAPI';\nimport {\n    logoutAC,\n    setError,\n    setForgotStatus,\n    setLoading,\n    setPasswordChange,\n    setRegisterStatus,\n    setUserData\n} from \"./authReducer\";\n// import {authActions, AuthActionsType} from './authActions'\n\n\nexport const setErrorTC = (error: string): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    dispatch(setError({error}))\n    // setTimeout(() => dispatch(authActions.setError('')), 3000)\n}\n\nexport const infoTC = (name?:string, avatar?:string): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    dispatch(setLoading({predicate:true}))\n    try {\n        const data = await authAPI.info(name,avatar)\n        dispatch(setUserData(data.updatedUser))\n    }catch (e){\n        e.response ? dispatch(setErrorTC(e.response.data.error)) : dispatch(setErrorTC(`Error: ${e.message}`))\n    }\n}\n\n\nexport const setUserDataTC = (): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    dispatch(setLoading({predicate:true}))\n    try {\n        const data = await authAPI.me()\n        dispatch(setUserData(data))\n    } catch (e) {\n        e.response ? dispatch(setErrorTC(e.response.data.error)) : dispatch(setErrorTC(`Error: ${e.message}`))\n    }\n}\n\n\nexport const logout = (): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    debugger\n    dispatch(setLoading({predicate:true}))\n    try {\n        const response = await authAPI.logout()\n        dispatch(logoutAC({}))\n        return response\n    } catch (e) {\n        e.response ? dispatch(setErrorTC(e.response.data.error)) : dispatch(setErrorTC(`Error: ${e.message}`))\n    }\n\n}\n\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    dispatch(setLoading({predicate:true}))\n    try {\n        const data = await authAPI.logIn(email, password, rememberMe);\n        dispatch(setUserData(data))\n    } catch (e) {\n        e.response ? dispatch(setErrorTC(e.response.data.error)) : dispatch(setErrorTC(`Error: ${e.message}`))\n    }\n}\n\nexport const registerTC = (payload: { email: string, password: string, password2: string }): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    dispatch(setLoading({predicate:true}))\n    try {\n        await authAPI.register(payload)\n        dispatch(setRegisterStatus({status:'success'}))\n    } catch (e) {\n        dispatch(setRegisterStatus({status:'error'}))\n        e.response ? dispatch(setErrorTC(e.response.data.error)) : dispatch(setErrorTC(`Error: ${e.message}`))\n    } finally {\n        dispatch(setRegisterStatus({status:'idle'}))\n    }\n}\n\n\nexport const recoveryPasswordTC = (email: string): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    dispatch(setLoading({predicate: true}))\n    try {\n        await authAPI.recoverPass(email)\n        dispatch(setForgotStatus({status:'success'}))\n    } catch (e) {\n        e.response ? dispatch(setErrorTC(e.response.data.error)) : dispatch(setErrorTC(`Error: ${e.message}`))\n    }\n}\n\n\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string): ThunkAction<void, AppRootStateType, {}, any> => async (dispatch) => {\n    dispatch(setLoading({predicate:true}))\n    try {\n        await authAPI.setNewPass(password, resetPasswordToken)\n        dispatch(setPasswordChange({isPasswordChanged:true}))\n    } catch (e) {\n        e.response ? dispatch(setErrorTC(e.response.data.error)) : dispatch(setErrorTC(`Error: ${e.message}`))\n    }\n}","import React from 'react';\nimport styles from './Bacdrop.module.scss'\n\n\nexport const Backdrop:React.FC = React.memo(({children})=> {\n    return <div className={styles.root}>\n        {children}\n    </div>\n})","import React from 'react'\nimport styles from './Preloader.module.css'\n\nexport const Preloader = () => {\n    return (\n        <div className={styles.overlay_loader}>\n            <div className={styles.loader}>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Formik} from 'formik';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Redirect, useHistory} from 'react-router-dom';\nimport {AppRootStateType} from '../../../../n1-main/m2-bll/store';\nimport {Register} from './Register';\nimport {AuthStateType} from '../../../m2-bll/r2-auth/authInitState';\nimport {registerTC} from '../../../m2-bll/r2-auth/authThunk';\nimport {Backdrop} from '../../common/Backdrop/Backdrop';\nimport {Preloader} from '../../common/c4-Preloader/Preloader';\n\ntype ErrorsValueType = {\n    email?: string,\n    password?: string,\n    password2?: string\n}\n\n\nexport const RegisterContainer = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const {error, loading, registerStatus} = useSelector<AppRootStateType, AuthStateType>(state => state.auth)\n    if (registerStatus === 'success') {\n        return <Redirect to={'/login'}/>\n    }\n    return (\n        <>\n            {loading && <Backdrop>\n                <Preloader/>\n            </Backdrop>}\n            <Formik\n                initialValues={{email: '', password: '', password2: ''}}\n                validate={values => {\n                    const errors: ErrorsValueType = {};\n                    if (!values.email) {\n                        errors.email = 'Required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    if (\n                        !values.password\n                    ) {\n                        errors.password = 'Введите пароль'\n                    }\n                    if (\n                        !values.password2\n                    ) {\n                        errors.password2 = 'Введите пароль'\n                    }\n                    return errors;\n                }}\n                onSubmit={(values) => {\n                    dispatch(registerTC(values))\n                }}\n                onReset={() => {\n                    history.push('/login')\n                }\n                }\n            >\n                {(props) => (\n                    <Register {...props} error={error} loading={loading}/>\n                )}\n            </Formik>\n        </>\n    )\n}","import React from 'react'\nimport {RegisterContainer} from './RegisterContainer';\n\n\nexport const Registration = () => {\n    return(\n        <RegisterContainer/>\n    )\n}","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport {FieldProps} from 'formik';\nimport styles from './CheckBox.module.scss'\n\n\ntype CheckBoxPropsType = FieldProps & DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & {\n    type?: string\n}\n\nexport const CheckBox: React.FC<CheckBoxPropsType> =\n    ({\n         field, // { name, value, onChange, onBlur }\n         form: {touched, errors,values}, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc,\n         type,\n        className,\n         ...props\n     }) => {\n        const finalClassName = `${styles.checkbox} ${className}`\n        return (\n                <input type='checkbox' className={finalClassName} {...field} {...props}/>\n        )\n    }","import React from 'react';\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\nimport styles from './Login.module.scss'\nimport {Field, Form, FormikProps} from 'formik';\nimport {InputField} from '../../common/alternative/InputField/InputField';\nimport {CheckBox} from '../../common/alternative/CheckBox/CheckBox';\nimport {NavLink} from 'react-router-dom'\n\ntype LoginPropsType = FormikProps<any> & {\n    error: string,\n    loading: boolean\n}\n\nexport const Login: React.FC<LoginPropsType> =\n    ({\n         error,\n         handleSubmit,\n         loading\n     }) => {\n        return (\n            <section className={`${styles.root} container flex`}>\n                <Form className={'form'} onSubmit={handleSubmit}>\n                    <h2>it-incubator</h2>\n                    <h3>Sign-in</h3>\n                    <Field name={'email'} type={'email'} label={'email'} component={InputField}/>\n                    <Field name={'password'} type={'password'} label={'password'} component={InputField}/>\n                    <div className={styles.checkbox_wrapper}>\n                        <Field name={'rememberMe'} type={'checkbox'} component={CheckBox} className={styles.checkbox}/>\n                        <div>remember me</div>\n                    </div>\n\n                    <div className={styles.forgotLinkWrapper}>\n                        <NavLink to={'/forgot'} className={styles.forgotLink}>\n                            Forgot Password?\n                        </NavLink>\n                    </div>\n\n                    <ButtonNya title={'Login'} type={'submit'} disabled={loading} className={styles.button}>\n                        Login\n                    </ButtonNya>\n\n                    <div className={styles.signUpTitle}>Don't have an account?</div>\n                    <NavLink to={'/registration'} className={styles.signUpLink}>\n                        Sign up\n                    </NavLink>\n                </Form>\n            </section>\n        )\n    }\n\n\n\n","import React from 'react';\nimport {Login} from './Login';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../../../m2-bll/store';\nimport {Redirect} from 'react-router-dom';\nimport {Preloader} from '../../common/c4-Preloader/Preloader';\nimport {Formik} from 'formik';\nimport {AuthStateType} from '../../../m2-bll/r2-auth/authInitState';\nimport {loginTC} from '../../../m2-bll/r2-auth/authThunk';\nimport {Backdrop} from '../../common/Backdrop/Backdrop';\n\n\ntype ErrorsType = {\n    email?: string\n    password?: string\n}\n\nexport const LoginContainer = () => {\n        const {isLogin, error, loading} = useSelector<AppRootStateType, AuthStateType>(state => state.auth)\n        const dispatch = useDispatch();\n        if (isLogin) {\n            return <Redirect to={'profile'}/>\n        }\n\n\n        return (\n            <>\n                {loading && <Backdrop>\n                    <Preloader/>\n                </Backdrop>}\n                <Formik\n                    initialValues={{email: 'testtest@gmail.com', password: '12345678', rememberMe: false}}\n                    validate={values => {\n                        const errors: ErrorsType = {};\n\n                        if (!values.email) {\n                            errors.email = 'This field is required!';\n                        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                            errors.email = 'Invalid email format';\n                        }\n\n                        if (!values.password) {\n                            errors.password = 'This field is required!';\n                        } else if (values.password.length < 8) {\n                            errors.password = 'Password must be more than 7 characters';\n                        }\n\n                        return errors;\n                    }}\n                    onSubmit={({email, password, rememberMe}) => {\n                        dispatch(loginTC(email, password, rememberMe))\n                    }}\n                >\n                    {\n                        (props) => (\n                            <Login {...props} error={error} loading={loading}/>\n                        )\n                    }\n                </Formik>\n            </>\n\n        );\n    }\n;\n\n","import React from 'react';\nimport {LoginContainer} from './LoginContainer';\n\nexport const LoginPage = () => {\n    return (\n        <>\n            <LoginContainer />\n        </>\n    );\n};\n\n","import React from 'react'\nimport {useSelector} from 'react-redux';\nimport {AppRootStateType} from '../n1-main/m2-bll/store';\nimport {Redirect} from 'react-router-dom';\nimport {AppStateType} from '../n1-main/m2-bll/r1-app/appInitState';\nimport {Preloader} from '../n1-main/m1-ui/common/c4-Preloader/Preloader';\nimport {AuthStateType} from '../n1-main/m2-bll/r2-auth/authInitState';\nimport {Backdrop} from '../n1-main/m1-ui/common/Backdrop/Backdrop';\n\n\nexport const WithAuthRedirect: React.FC = React.memo(({children}) => {\n    const {error,loading} = useSelector<AppRootStateType,AppStateType>((state)=> state.app)\n    const {isLogin} = useSelector<AppRootStateType, AuthStateType>(state => state.auth)\n\n    if(loading){\n        return <Backdrop><Preloader/></Backdrop>\n    }\n\n    if (error) {\n        return <Redirect to={'/login'}/>\n    }\n\n    if(!isLogin) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return (\n        <React.Fragment>\n            {children}\n        </React.Fragment>\n    )\n})\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {WithAuthRedirect} from '../../../../n4-hoc/WithAuthRedirect';\nimport styles from './Profile.module.scss'\nimport {NavLink, useHistory} from 'react-router-dom';\nimport {logout} from '../../../m2-bll/r2-auth/authThunk';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../../../m2-bll/store';\nimport {AuthStateType, IUser} from '../../../m2-bll/r2-auth/authInitState';\nimport SuperButton from '../../common/c2-SuperButton/SuperButton';\nimport {Backdrop} from '../../common/Backdrop/Backdrop';\nimport {Preloader} from '../../common/c4-Preloader/Preloader';\n\nexport const ProfileContainer = () => {\n    const {loading} = useSelector<AppRootStateType, AuthStateType>(state=>state.auth)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const user = useSelector<AppRootStateType, IUser | null>(state => state.auth.user)\n\n\n    const onClickHandler = async () => {\n        try{\n            await dispatch(logout())\n            history.push('/login')\n        }\n        catch (e){\n            console.log('LOGOUT: ', e.response)\n        }\n    }\n\n    if(loading) {\n        return (\n            <Backdrop><Preloader/></Backdrop>\n        )\n    }\n    return (\n        <div className={`container ${styles.profile_container}`}>\n            <div>{user !== null && `Ваше Имя ${user.name}`}</div>\n            <NavLink to={'/personal-information'}>Profile Edit</NavLink>\n            <SuperButton onClick={onClickHandler} disabled={loading}>Logout</SuperButton>\n        </div>\n    )\n}\n\nexport const Profile = () => {\n    return (\n        <WithAuthRedirect>\n            <ProfileContainer/>\n        </WithAuthRedirect>\n    )\n}","import React from 'react'\nimport {Field, Form, FormikProps} from 'formik';\nimport {InputField} from \"../../../../n1-main/m1-ui/common/alternative/InputField/InputField\";\nimport styles from './Forgot.module.scss'\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\nimport {NavLink} from 'react-router-dom'\n\ntype ForgotPropsType = FormikProps<any> & {\n    error: null | string\n    loading: boolean\n}\n\nexport const Forgot: React.FC<ForgotPropsType> = (props) => (\n    <div className={`container flex ${styles.root}`}>\n        <Form className={'form'} onSubmit={props.handleSubmit}>\n            <h2>it-incubator</h2>\n            <h3>Forgot your password?</h3>\n            <Field name={'email'} type={'email'} label={'email'} component={InputField}/>\n            <div className={styles.description}>Enter your email address and we will send you further instructions </div>\n            <ButtonNya type=\"submit\" disabled={props.loading} className={styles.button}>\n                Submit\n            </ButtonNya>\n            <div className={styles.remember}>Did you remember your password?</div>\n            <NavLink className={styles.loginLink} to={'/login'}>Try logging in</NavLink>\n        </Form>\n        <div className={styles.error}>{props.error}</div>\n    </div>\n    )\n\n","export default __webpack_public_path__ + \"static/media/email.27258fd7.svg\";","import React from \"react\";\nimport styles from './CheckEmail.module.scss'\nimport email from '../../../../n3-styles/images/email.svg'\n\n\n\nexport const CheckEmail = () => {\n    return (\n        <div className={`container flex ${styles.root}`}>\n            <div className={'form'}>\n                <h2>it-incubator</h2>\n                <div className={styles.image_wrapper}>\n                    <img src={email} alt={'email'}/>\n                </div>\n                <div className={styles.title}>Check Email</div>\n                <div className={styles.description}>We’ve sent an Email with instructions to example@mail.com</div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Formik} from 'formik';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Forgot} from './Forgot';\nimport {AppRootStateType} from '../../../../n1-main/m2-bll/store';\nimport {Preloader} from '../../../../n1-main/m1-ui/common/c4-Preloader/Preloader';\nimport {CheckEmail} from '../CheckEmail/CheckEmail';\nimport {recoveryPasswordTC} from '../../../m2-bll/r2-auth/authThunk';\nimport {AuthStateType} from '../../../m2-bll/r2-auth/authInitState';\nimport {Backdrop} from '../../common/Backdrop/Backdrop';\n\ntype ErrorsValueType = {\n    email?: string\n}\n\nexport const ForgotContainer = () => {\n    const {forgotStatus, error, loading} = useSelector<AppRootStateType, AuthStateType>(state => state.auth)\n    const dispatch = useDispatch()\n\n    if (forgotStatus === 'success') {\n        return <CheckEmail/>\n    }\n    return (\n        <>\n            {loading && <Backdrop>\n                <Preloader/>\n            </Backdrop>}\n            <Formik\n                initialValues={{email: ''}}\n\n                validate={values => {\n                    const errors: ErrorsValueType = {};\n                    if (!values.email) {\n                        errors.email = 'email is required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values) => {\n                    dispatch(recoveryPasswordTC(values.email))\n                }}\n            >\n                {(props) => (\n                    <Forgot {...props} error={error} loading={loading}/>\n                )}\n            </Formik>\n        </>\n    )\n}\n\n","import React from 'react';\nimport {ForgotContainer} from './ForgotContainer';\n\nexport const ForgotPage = ()=>{\n    return (\n        <ForgotContainer/>\n    )\n}","import React from 'react'\nimport {Field, Form, FormikProps} from 'formik';\nimport {InputField} from '../../../../n1-main/m1-ui/common/alternative/InputField/InputField';\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\nimport styles from './NewPassword.module.scss'\n\n\ntype NewPasswordPropsType = FormikProps<any> & {\n    error: null | string\n    loading: boolean\n}\n\nexport const NewPassword: React.FC<NewPasswordPropsType> = (props) => (\n    <div className={`container flex ${styles.root}`}>\n        <Form className={'form'} onSubmit={props.handleSubmit}\n              style={{width: 400, display: 'flex', flexDirection: 'column'}}>\n            <h2>it-incubator</h2>\n            <h3>Create new password</h3>\n\n            <Field name={'password'} type={'password'} label={'Password'} component={InputField}/>\n            <div className={styles.description}>Create new password and we will send you further instructions to email</div>\n\n            <ButtonNya type=\"submit\" disabled={props.loading}>\n                Submit\n            </ButtonNya>\n        </Form>\n        <div>{props.error}</div>\n\n    </div>\n)\n","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {useParams} from 'react-router-dom'\nimport {Formik} from 'formik';\nimport {Preloader} from \"../../../../n1-main/m1-ui/common/c4-Preloader/Preloader\";\nimport {AppRootStateType} from \"../../../../n1-main/m2-bll/store\";\nimport {NewPassword} from \"./NewPassword\";\nimport {setNewPasswordTC} from '../../../m2-bll/r2-auth/authThunk';\nimport {AuthStateType} from '../../../m2-bll/r2-auth/authInitState';\nimport {Backdrop} from '../../common/Backdrop/Backdrop';\n\n\ntype ErrorsValueType = {\n    password?: string\n}\n\nexport const NewPasswordContainer = () => {\n    const {error, loading, isPasswordChanged} = useSelector<AppRootStateType, AuthStateType>(state => state.auth)\n    const dispatch = useDispatch()\n    let {token} = useParams<{ token: string }>()\n\n    if (isPasswordChanged) {\n        return <Redirect to={'/login'}/>\n    }\n    return (\n        <>\n            {loading && <Backdrop>\n                <Preloader/>\n            </Backdrop>}\n            <Formik\n                initialValues={{password: ''}}\n                validate={values => {\n                    const errors: ErrorsValueType = {};\n                    if (\n                        !values.password\n                    ) {\n                        errors.password = 'Enter password'\n                    }\n\n                    return errors;\n                }}\n                onSubmit={(values) => {\n                    dispatch(setNewPasswordTC(values.password, token))\n                }}\n            >\n                {(props) => (\n                    <NewPassword {...props} error={error} loading={loading}/>\n                )}\n            </Formik>\n        </>\n    );\n};","import React from 'react';\nimport {NewPasswordContainer} from './NewPasswordContainer';\n\n\nexport const NewPasswordPage = () => {\n    return (\n        <>\n            <NewPasswordContainer/>\n        </>\n    );\n};\n\n\n","import {AppEvents} from '../events';\nimport {InferActionsType} from '../ActionsType'\n\n\nexport const appActions = {\n    setLoading: (predicate: boolean) => {\n        return {\n            type: AppEvents.SET_APP_LOADING,\n            predicate\n        } as const\n    },\n    setSuccess: (predicate: boolean) => {\n        return {\n            type: AppEvents.SET_APP_SUCCESS,\n            predicate\n        } as const\n    },\n    setError: (error: string) => {\n        return {\n            type: AppEvents.SET_APP_ERROR,\n            error\n        } as const\n    }\n}\nexport type AppActionsType = InferActionsType<typeof appActions>","import React from 'react';\nimport {useHistory} from 'react-router-dom'\n\n\ntype CardPropsType = {\n    id:string\n    packUserId: string\n    question: string\n    answer: string\n    updated: string\n    grade: number\n    createdBy: string\n    cardId: string\n    cardPackId: string\n    myId:string | undefined\n    showDeleteCardModal: (cardPackId: string, cardId: string) => void\n    showEditCardModal: (cardPackId: string, cardId: string) => void\n}\n\nexport const Card: React.FC<CardPropsType> = (props) => {\n\n\n    const showCardDeleteModal = () => {\n        props.showDeleteCardModal(props.cardPackId, props.cardId)\n    }\n\n    const showCardEditModal = () => {\n        props.showEditCardModal(props.cardPackId, props.cardId)\n    }\n\n    const history = useHistory();\n\n    const classForDeleteButton = `square_delete__button ${props.packUserId !== props.myId && 'non_active_button'}`;\n    const classForEditButton = `square_button ${props.packUserId !== props.myId && 'non_active_button'}`;\n\n    return (\n            <tr>\n                <td>{props.question}</td>\n                <td>{props.answer}</td>\n                <td>{props.updated}</td>\n                <td>{props.grade}</td>\n                <td>\n                    <div className={'button_wrapper'}>\n                        <button className={'square_button'}\n                                onClick={() => history.push(`/learn/${props.id}`)}>Learn\n                        </button>\n                        <button className={classForDeleteButton} onClick={showCardDeleteModal}>delete</button>\n                        <button className={classForEditButton} onClick={showCardEditModal}>edit</button>\n                    </div>\n                </td>\n            </tr>\n    );\n};\n","\nimport {CardType, GetCardsResponseType} from '../../m3-dal/cardsAPI';\nimport {CardsEvents} from '../events';\nimport {InferActionsType} from '../ActionsType';\n\nexport type CardsActionsType = InferActionsType<typeof cardsActions>\n\nexport const cardsActions = {\n    setCards: (cardsInfo: GetCardsResponseType) => {\n        return {\n            type: CardsEvents.SET_CARDS,\n            cardsInfo\n        } as const\n    },\n    setIsLoading: (isLoading: boolean) => {\n        return {\n            type: CardsEvents.SET_CARDS_LOADING,\n            isLoading\n        } as const\n    }\n\n}","import {instance} from './axios';\n\n\nexport type GetCardsResponseType = {\n    cards:Array<CardType>,\n    cardsTotalCount:number,\n    maxGrade:number,\n    minGrade:number,\n    packUserId:string,\n    page:number,\n    pageCount:number,\n    token:number,\n    tokenDeathTime:number\n}\n\n\nexport type CommonResponseType = {\n    token:string,\n    tokenDeathTime:number\n}\n\nexport type CardType = {\n    answer: string\n    cardsPack_id: string\n    comments?: string\n    created: string\n    updated: string\n    grade: number\n    more_id: string\n    question: string\n    rating: number\n    shots: number\n    user_id?: string\n    _id: string\n    __v:number\n}\n\n\nexport interface ChangeGradeResponseType extends Omit<CardType, 'answer' | 'comments' | 'question' | 'rating'>  {\n    cards_id:string\n}\n\n\nexport type CardTypeForEdit = {\n    _id?: string\n    cardsPack_id: string\n    question?: string\n    answer?: string\n    grade?: string\n    shots?: string\n    rating?: string\n    answerImg?: string\n    questionImg?: string\n    questionVideo?: string\n    answerVideo?: string\n    type?: string\n}\n\nexport type ParamsForCardFetching = {\n    cardsPack_id: string,\n    cardQuestion?: string,\n    cardAnswer?: string,\n    min?: string,\n    max?: string,\n    sortCards?: string,\n    page?: string,\n    pageCount?: string\n}\n\n\n\n\nexport const cardsAPI = {\n    getCards: async (params: ParamsForCardFetching) => {\n        const response = await instance.get<GetCardsResponseType>(`cards/card`, {params: {...params}});\n        return response.data\n    },\n    deleteCard: async (id: string) => {\n        const response = await instance.delete<CommonResponseType & {deletedCard:CardType}>(`cards/card?id=${id}`);\n        return response.data\n    },\n    createNewCard: async (card: CardTypeForEdit) => {\n        const response = await instance.post<CommonResponseType & {newCard:CardType}>(`cards/card`, {card});\n        return response.data\n    },\n    editCard: async (card: CardTypeForEdit) => {\n        const response = await instance.put<CommonResponseType & {newCard:CardType}>(`cards/card`, {card});\n        return response.data\n    },\n    changeGradeCard: async (grade:number, card_id:string) => {\n        const response = await instance.put<CommonResponseType & { updatedGrade: ChangeGradeResponseType }>(`cards/grade`, {grade,card_id })\n        return response.data\n    }\n}","import {ThunkAction} from \"redux-thunk\";\nimport {AppRootStateType} from \"../store\";\nimport {cardsActions, CardsActionsType} from \"./cardsActions\";\nimport {cardsAPI, CardTypeForEdit} from \"../../m3-dal/cardsAPI\";\n\nexport const getCards = (cardsPack_id: string): ThunkAction<void, AppRootStateType, {}, CardsActionsType> =>\n    async (dispatch) => {\n        dispatch(cardsActions.setIsLoading(true))\n        try {\n            const response = await cardsAPI.getCards({cardsPack_id})\n            dispatch(cardsActions.setCards(response))\n        } catch (e) {\n            console.log('CARDS_FETCHING_ERROR: ', {...e})\n        } finally {\n            dispatch(cardsActions.setIsLoading(false))\n        }\n    }\n\nexport const addNewCard = (card: CardTypeForEdit, cardPack_id: string): ThunkAction<void, AppRootStateType, {}, CardsActionsType> =>\n    async (dispatch) => {\n        dispatch(cardsActions.setIsLoading(true))\n        try {\n            await cardsAPI.createNewCard(card);\n            dispatch(getCards(cardPack_id))\n        } catch (e) {\n            console.log('ADD_NEW_CARD_ERROR: ', {...e})\n        } finally {\n            dispatch(cardsActions.setIsLoading(false))\n        }\n    }\n\nexport const deleteCard = (cardPack_id: string, id: string): ThunkAction<void, AppRootStateType, {}, CardsActionsType> =>\n    async (dispatch) => {\n        dispatch(cardsActions.setIsLoading(true))\n        try {\n            await cardsAPI.deleteCard(id);\n            dispatch(getCards(cardPack_id))\n        } catch (e) {\n            console.log('DELETE_CARD_ERROR: ', {...e})\n        } finally {\n            dispatch(cardsActions.setIsLoading(false))\n        }\n    }\n\nexport const editCard = (card: CardTypeForEdit, _id: string): ThunkAction<void, AppRootStateType, {}, CardsActionsType> =>\n    async (dispatch) => {\n            dispatch(cardsActions.setIsLoading(true))\n            try {\n                await cardsAPI.editCard({...card, _id});\n                dispatch(getCards(card.cardsPack_id))\n            } catch (e) {\n                console.log('EDIT_CARD_ERROR: ', {...e})\n            } finally {\n                dispatch(cardsActions.setIsLoading(false))\n            }\n         }\n\n\n    export const gradeCardTC = (grade:number, card_id:string) => async (dispatch:any) => {\n        dispatch(cardsActions.setIsLoading(true))\n        try {\n            await cardsAPI.changeGradeCard(grade, card_id)\n        } catch (e) {\n            console.log('GRADE_CARD_ERROR: ', {...e})\n        } finally {\n            dispatch(cardsActions.setIsLoading(false))\n        }\n    }","export default __webpack_public_path__ + \"static/media/long_arrow.a0d94486.svg\";","import React from 'react';\nimport styles from './PackModal.module.css'\n\ntype PackModalPropsType = {\n    active: boolean\n    setActive: (active: boolean) => void\n    children: React.ReactNode\n}\n\n\nexport const PackModal: React.FC<PackModalPropsType> = ({active, children, setActive}) => {\n\n    const classForModal = active ? `${styles.modal} ${styles.active}` : `${styles.modal}`;\n    const classForModalContent = active ? `${styles.modalContent} ${styles.active}` : `${styles.modalContent}`;\n\n    const setModalActive = () => {\n        setActive(false)\n    }\n\n\n\n    return (\n        <div className={classForModal} onClick={setModalActive} >\n            <div className={classForModalContent} onClick={e => e.stopPropagation()}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {Card} from './Card';\nimport style from '../Packs/Packs.module.scss';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {NavLink, Redirect, useParams} from 'react-router-dom';\nimport {addNewCard, deleteCard, editCard, getCards} from '../../../m2-bll/r4-cards/cardsThunk';\nimport {AppRootStateType} from '../../../m2-bll/store';\nimport {Preloader} from '../../common/c4-Preloader/Preloader';\nimport {WithAuthRedirect} from '../../../../n4-hoc/WithAuthRedirect';\nimport {CardsInitialStateType} from '../../../m2-bll/r4-cards/cardsInitialState';\nimport styles from './CardsTable.module.scss'\nimport arrow from '../../../../n3-styles/images/long_arrow.svg'\nimport {IUser} from '../../../m2-bll/r2-auth/authInitState';\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\nimport {PackModal} from \"../Packs/PackModal\";\n\nconst CardsTableContainer = React.memo(() => {\n\n    const [cardQuestion, setCardQuestion] = useState<string>('');\n    const [cardAnswer, setCardAnswer] = useState<string>('');\n    const [modalCardAddActive, setModalCardAddActive] = useState<boolean>(false);\n    const [modalCardEditActive, setModalCardEditActive] = useState<boolean>(false);\n    const [modalCardDeleteActive, setModalCardDeleteActive] = useState<boolean>(false);\n    const [cardPackId, setCardPackId] = useState<string>('')\n    const [cardId, setCardId] = useState<string>('')\n\n    const dispatch = useDispatch();\n\n    const {cards, isLoading,packUserId} = useSelector<AppRootStateType, CardsInitialStateType>(state => state.cards)\n    const user = useSelector<AppRootStateType,IUser | null>(state=>state.auth.user)\n    const {id} = useParams<{ id: string }>()\n\n    useEffect(() => {\n        dispatch(getCards(id))\n    }, [dispatch, id])\n\n    if (isLoading) {\n        return <Preloader/>\n    }\n\n    if(!packUserId){\n        return <Redirect to={'/packs'}/>\n    }\n\n    const changeCardQuestionHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setCardQuestion(e.currentTarget.value)\n    }\n\n    const changeCardAnswerHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setCardAnswer(e.currentTarget.value)\n    }\n\n    const showAddCardModal = () => {\n        setModalCardAddActive(true)\n    }\n\n    const showDeleteCardModal = (cardPackId: string, cardId: string) => {\n        setModalCardDeleteActive(true)\n        setCardId(cardId);\n        setCardPackId(cardPackId)\n    }\n\n    const showEditCardModal = (cardPackId: string, cardId: string) => {\n        setModalCardEditActive(true)\n        setCardId(cardId);\n        setCardPackId(cardPackId)\n    }\n\n    const sendEditCardInfo = () => {\n        dispatch(editCard({question: cardQuestion, answer: cardAnswer, cardsPack_id: cardPackId, }, cardId))\n        setCardId('');\n        setCardPackId('');\n        setCardAnswer('');\n        setCardQuestion('');\n        setModalCardEditActive(false)\n    }\n\n    const removeCard = () => {\n        dispatch(deleteCard(cardPackId, cardId))\n        setCardId('');\n        setCardPackId('');\n        setModalCardDeleteActive(false);\n    }\n\n    const addCard = () => {\n        dispatch(addNewCard({cardsPack_id: id, question: cardQuestion, answer: cardAnswer}, id))\n        setCardAnswer('');\n        setCardQuestion('');\n        setModalCardAddActive(false)\n    }\n    return (\n        <div className={`container ${styles.container}`}>\n            <div className={`${styles.root}`}>\n                <h2>\n                    <NavLink to={'/packs'}><img className={styles.img} src={arrow} alt=\"\"/>\n                        Pack Name\n                    </NavLink>\n                </h2>\n                { packUserId === user?._id && <div className={styles.btn}>\n                    <ButtonNya onClick={showAddCardModal}>\n                        Add new card</ButtonNya></div>}\n                <table className={styles.table}>\n                    <thead>\n                    <tr>\n                        <th >Question</th>\n                        <th >Answer</th>\n                        <th >Last Updated</th>\n                        <th >Grade</th>\n                        <th >Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody className={style.packsTable}>\n                    {cards.length !== 0\n                        ? cards.map(c => {\n                            return (\n                                <Card key={c._id}\n                                      cardId={c._id}\n                                      packUserId={packUserId}\n                                      cardPackId={c.cardsPack_id}\n                                      question={c.question}\n                                      answer={c.answer}\n                                      updated={c.updated}\n                                      grade={c.grade}\n                                      createdBy={'some user'}\n                                      myId={user?._id}\n                                      id={id}\n                                      showDeleteCardModal={showDeleteCardModal}\n                                      showEditCardModal={showEditCardModal}\n                                />\n                            )\n                        })\n                        : <div style={{textAlign: 'center', fontWeight: 'bold'}}> Карточек пока нет</div>}\n                    </tbody>\n                </table>\n            </div>\n\n            <PackModal active={modalCardAddActive} setActive={setModalCardAddActive}>\n                <div>Add New Card</div>\n                <div>Card question</div>\n                <input\n                    type={'text'}\n                    placeholder={'Type new card question...'}\n                    value={cardQuestion}\n                    onChange={changeCardQuestionHandler}/>\n                <div>Card answer</div>\n                <input\n                    type={'text'}\n                    placeholder={'Type new card answer...'}\n                    value={cardAnswer}\n                    onChange={changeCardAnswerHandler}/>\n                <div>\n                    <button onClick={() => setModalCardAddActive(false)}>Cancel</button>\n                    <button onClick={addCard}>Save</button>\n                </div>\n            </PackModal>\n\n            <PackModal active={modalCardDeleteActive} setActive={setModalCardDeleteActive}>\n                <div>Delete Card</div>\n                <div>Do you really want to remove this Card?</div>\n\n                <div>\n                    <button onClick={() => setModalCardDeleteActive(false)}>Cancel</button>\n                    <button onClick={removeCard}>Delete</button>\n                </div>\n            </PackModal>\n\n            <PackModal active={modalCardEditActive} setActive={setModalCardEditActive}>\n                <div>Edit Card</div>\n                <div>Card question</div>\n                <input\n                    type={'text'}\n                    placeholder={'Type new card question...'}\n                    value={cardQuestion}\n                    onChange={changeCardQuestionHandler}/>\n                <div>Card answer</div>\n                <input\n                    type={'text'}\n                    placeholder={'Type new card answer...'}\n                    value={cardAnswer}\n                    onChange={changeCardAnswerHandler}/>\n                <div>\n                    <button onClick={() => setModalCardEditActive(false)}>Cancel</button>\n                    <button onClick={sendEditCardInfo}>Save</button>\n                </div>\n            </PackModal>\n        </div>\n\n    );\n})\n\n\nexport const CardsTable = () => {\n    return (\n        <WithAuthRedirect>\n            <CardsTableContainer/>\n        </WithAuthRedirect>\n    )\n}\n\n","import React, {DetailedHTMLProps} from 'react';\nimport style from './Pack.module.css';\nimport {NavLink, useHistory} from 'react-router-dom';\n\n\ntype PackPropsType = DetailedHTMLProps<any, any> & {\n    name: any\n    cardsCount: any\n    lastUpdated: any\n    userName: any\n    user_id: string\n    userAuthId: string | null\n    id: string\n    setPackId: (id: string) => void\n    setModalDeletePackActive: (active: boolean) => void\n    setModalEditPackActive: (active: boolean) => void\n    setEditablePackId: (id: string) => void\n}\n\nexport const Pack: React.FC<PackPropsType> = (\n    {\n        name,\n        cardsCount,\n        lastUpdated,\n        userName,\n        id,\n        setPackId,\n        setModalDeletePackActive,\n        setModalEditPackActive,\n        setEditablePackId,\n        user_id,\n        userAuthId,\n        className\n\n    }) => {\n    lastUpdated = lastUpdated.slice(0, 10).split('-').reverse().join('.')\n\n\n    const history = useHistory()\n\n    const deletePack = () => {\n        setModalDeletePackActive(true)\n        setPackId(id)\n    }\n\n    const showEditPackModal = () => {\n        setModalEditPackActive(true)\n        setEditablePackId(id)\n    }\n    return (\n        <tr className={`${style.pack} ${className}`}>\n            <td>\n                <NavLink to={`cards/${id}`}>{name}</NavLink>\n            </td>\n            <td>{cardsCount}</td>\n            <td>{lastUpdated}</td>\n            <td>{userName}</td>\n            <td>\n                <div className={'button_wrapper'}>\n                    <button className={'square_button'} disabled={!cardsCount}\n                            onClick={() => history.push(`learn/${id}`)}>Learn\n                    </button>\n                    <button className={`square_delete__button ${user_id !== userAuthId && 'non_active_button'}`}\n                            onClick={deletePack}>Delete\n                    </button>\n                    <button className={`square_button ${user_id !== userAuthId && 'non_active_button'}`}\n                            onClick={showEditPackModal}>Edit\n                    </button>\n                </div>\n            </td>\n        </tr>\n    );\n}\n","import React, {useState} from 'react';\nimport {Range, getTrackBackground} from 'react-range';\nimport {useDispatch} from \"react-redux\";\nimport {setMinMaxTC} from '../../../m2-bll/r5-findPagination/findPaginationThunk';\n\n\n\nexport type PriceRangePropsType = {\n    maxCount?:number\n    minCount?:number\n}\n\n\nexport const PriceRange: React.FC<PriceRangePropsType> = ({maxCount = 100, minCount= 0}) => {\n    const dispatch = useDispatch()\n\n    const [values, setValues] = useState([minCount, maxCount]);\n\n\n    const rangeValuesHandler = (values:Array<number>) => {\n        setValues(values)\n       dispatch(setMinMaxTC(values[0], values[1]))\n    }\n\n    return (\n        <Range\n            values={values}\n            step={1}\n            min={minCount}\n            max={maxCount}\n            onChange={rangeValuesHandler}\n            renderTrack={({props, children}) => (\n                <div\n                    onMouseDown={props.onMouseDown}\n                    onTouchStart={props.onTouchStart}\n                    style={{\n                        ...props.style,\n                        height: '36px',\n                        display: 'flex',\n                        width: '100%'\n                    }}\n                >\n                    <div\n                        ref={props.ref}\n                        style={{\n                            height: '5px',\n                            width: '100%',\n                            borderRadius: '4px',\n                            background: getTrackBackground({\n                                values: values,\n                                colors: ['#9093c7', '#21268F', '#9093c7'],\n                                min: 0,\n                                max: 100\n                            }),\n                            alignSelf: 'center'\n                        }}\n                    >\n                        {children}\n                    </div>\n                </div>\n            )}\n            renderThumb={({index, props, isDragged}) => (\n                <div\n                    {...props}\n                    style={{\n                        ...props.style,\n                        height: '16px',\n                        width: '16px',\n                        outline: 'none',\n                        borderRadius: '50%',\n                        backgroundColor: '#FFF',\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        // boxShadow: '0px 2px 6px #AAA',\n                        border: '#21268F'\n                    }}\n                >\n                    <div\n                        style={{\n                            position: 'absolute',\n                            top: '-28px',\n                            color: '#fff',\n                            fontWeight: 'bold',\n                            lineHeight: '17px',\n                            fontSize: '14px',\n                            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\n                            padding: '4px 5px',\n                            borderRadius: '4px',\n                            backgroundColor: '#21268F'\n                        }}\n                    >\n                        {values[index].toFixed(0)}\n                    </div>\n                    <div\n                        style={{\n                            height: '16px',\n                            width: '16px',\n                            borderRadius: '50%',\n                            backgroundColor: '#ffffff',\n                            border: '4px solid #21268F',\n                        }}\n                    />\n                </div>\n            )}\n        />\n    );\n};\n\n","import React  from 'react';\nimport {PriceRange} from \"./PriceRange\";\nimport {useSelector} from 'react-redux';\nimport {AppRootStateType} from '../../../m2-bll/store';\n\n\nexport const PriceRangeContainer = () => {\n    const maxCount = useSelector<AppRootStateType, number>(state=>state.packs.maxCardsCount)\n    return (\n        <div>\n            <PriceRange maxCount={maxCount}/>\n        </div>\n    )\n}\n\n\n","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react'\nimport {useDispatch} from \"react-redux\";\nimport {setPageCountTC} from '../../../m2-bll/r5-findPagination/findPaginationThunk';\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options, className,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n\n    const dispatch = useDispatch()\n\n    const mappedOptions: any[] = options ? options.map((o, i) => {\n       return <option key={o + '-' + i} value={o}>{o}</option>\n    }) : []\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        dispatch(setPageCountTC(+e.currentTarget.value) )\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect","import React, {useState} from 'react'\nimport SuperSelect from \"./SuperSelect\";\n\n\n\nconst arr = ['10','15','20']\n\nexport const SuperSelectContainer = () => {\n    const [value, onChangeOption] = useState(arr[0])\n    return (\n        <SuperSelect\n            options={arr}\n            value={value}\n            onChangeOption={onChangeOption}\n        />\n    )\n}","import React from 'react';\nimport {SuperSelectContainer} from '../../common/select/SuperSelectContainer';\nimport {Paginator} from '../../common/c5-Paginator/Paginator';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../../../m2-bll/store';\nimport {FindPaginationInitialStateType} from '../../../m2-bll/r5-findPagination/findPaginationInitialState';\nimport {setCurrentPageTC} from '../../../m2-bll/r5-findPagination/findPaginationThunk';\nimport styles from './Pagination.module.scss'\n\n\nexport const Pagination = () => {\n    const dispatch = useDispatch()\n    const {cardPacksTotalCount, pageCount, page} = useSelector<AppRootStateType, FindPaginationInitialStateType>( state=>state.findPagination)\n\n    const changeCurrentPage  = (currentPage:number) => {\n        dispatch(setCurrentPageTC(currentPage))\n    }\n\n    return (\n        <div className={styles.root}>\n            <Paginator currentPage={page} pageSize={pageCount} totalCount={cardPacksTotalCount} onPageChange={changeCurrentPage }/>\n            Show &#160; <SuperSelectContainer/> &#160; Cards per Page\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/Search.db4fe6ce.svg\";","import React, {ChangeEvent} from 'react';\nimport styles from './Search.module.scss'\nimport search from '../../../../n3-styles/images/Search.svg'\n\ntype SearchPropsType = {\n    productName:string\n    doSearch:()=>void\n    inputValueHandler:(e:ChangeEvent<HTMLInputElement>)=>void\n}\n\nexport const Search:React.FC<SearchPropsType> = ({productName,inputValueHandler,doSearch})=>{\n\n    // const dispatch = useDispatch()\n    // const productName = useSelector<AppRootStateType, string>(state=> state.findPagination.productName)\n    //\n    //\n    // const inputValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    //     dispatch(SetProductNameTC(e.currentTarget.value))\n    // }\n    //\n    // const doSearch = () => {\n    //     dispatch(getCardPacks())\n    // }\n\n    return (\n        <label className={styles.root}>\n            <button onClick={doSearch} className={styles.btn}><img src={search} alt=\"\"/></button>\n            <input placeholder={'Search...'} className={styles.input} type=\"text\" value={productName} onChange={inputValueHandler} />\n        </label>\n    )\n}","import React, {ChangeEvent} from 'react';\nimport {Search} from './Search';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../../../m2-bll/store';\nimport {getCardPacks} from '../../../m2-bll/r3-packs/packsThunk';\nimport {SetProductNameTC} from '../../../m2-bll/r5-findPagination/findPaginationThunk';\n\n\nexport const SearchContainer = () => {\n\n    const dispatch = useDispatch()\n    const productName = useSelector<AppRootStateType, string>(state => state.findPagination.productName)\n\n\n    const inputValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        dispatch(SetProductNameTC(e.currentTarget.value))\n    }\n\n    const doSearch = () => {\n        dispatch(getCardPacks())\n    }\n\n\n    return (\n\n        <Search productName={productName} doSearch={doSearch} inputValueHandler={inputValueHandler}/>\n    )\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {Pack} from \"./Pack\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {PacksInitialStateType} from \"../../../m2-bll/r3-packs/packsInitialState\";\nimport {AppRootStateType} from \"../../../m2-bll/store\";\nimport {addNewCardPack, deleteCardPack, editCardsPack, getCardPacks} from \"../../../m2-bll/r3-packs/packsThunk\";\nimport {PriceRangeContainer} from \"../PriceRange/PriceRangeContainer\";\nimport {Pagination} from \"../Pagination/Pagination\";\nimport {Sort} from \"../../common/Sort/Sort\";\nimport {PackModal} from \"./PackModal\";\nimport {Preloader} from '../../common/c4-Preloader/Preloader';\nimport {CardsSwitch} from \"../CardsSwitch/CardsSwitch\";\nimport styles from './Packs.module.scss'\nimport {Backdrop} from '../../common/Backdrop/Backdrop';\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\nimport {SearchContainer} from '../../common/Search/SearchContainer';\n\n\nexport const Packs = () => {\n\n    const [modalDeletePackActive, setModalDeletePackActive] = useState<boolean>(false);\n    const [modalAddPackActive, setModalAddPackActive] = useState<boolean>(false);\n    const [modalEditPackActive, setModalEditPackActive] = useState<boolean>(false);\n    const [editablePackID, setEditablePackId] = useState<string>('')\n    const [newPackName, setNewPackName] = useState<string>('');\n    const [deletedPackId, setDeletedPackId] = useState<string>('');\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n            dispatch(getCardPacks())\n    }, [dispatch])\n\n\n    const {cardPacks, isLoading} = useSelector<AppRootStateType, PacksInitialStateType>(state => state.packs);\n    const userAuthId = useSelector<AppRootStateType, string | null>(state => state.auth.user\n        ? state.auth.user._id : null) ;\n\n\n    const addNewPack = () => {\n        dispatch(addNewCardPack({name: newPackName}))\n        setNewPackName('')\n        setModalAddPackActive(false);\n    }\n\n    const deletePack = () => {\n        dispatch(deleteCardPack(deletedPackId))\n        setModalDeletePackActive(false)\n    }\n\n    const changeNewPackNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setNewPackName(e.currentTarget.value)\n    }\n\n    const editPack = () => {\n        dispatch(editCardsPack(editablePackID, newPackName))\n        setNewPackName('')\n        setModalEditPackActive(false)\n    }\n\n    return (\n        <>\n            {isLoading && <Backdrop><Preloader/></Backdrop>}\n            <div className={`container ${styles.packs_container}`}>\n                <div className={styles.description_block}>\n                    <div className={styles.switch}>\n                        <CardsSwitch/>\n                    </div>\n                    <div>\n                        <div className={styles.range_title}>Number of cards</div>\n                        <PriceRangeContainer/>\n                    </div>\n                </div>\n                <div className={styles.packs_block}>\n                    <h2 className={styles.packs_title}>PacksList</h2>\n                    <div className={styles.block_controls}>\n                        <div className={styles.search_wrapper}>\n                            <SearchContainer/>\n                        </div>\n                        <ButtonNya onClick={() => setModalAddPackActive(true)}>\n                            Add new pack\n                        </ButtonNya>\n                    </div>\n                    <table className={styles.table}>\n                        <thead>\n                            <tr >\n                                <th>Name</th>\n                                <th >Cards\n                                </th>\n                                <th>Last Updated\n                                    <Sort sortObject={'updated'}/>\n                                </th>\n                                <th >Created by</th>\n                                <th >Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody className={styles.spreadsheet_info}>\n                            {cardPacks.map(cp => {\n                                return (<Pack key={cp._id}\n                                              name={cp.name}\n                                              cardsCount={cp.cardsCount}\n                                              lastUpdated={cp.updated}\n                                              userName={cp.user_name}\n                                              id={cp._id}\n                                              userAuthId={userAuthId}\n                                              user_id={cp.user_id}\n                                              setPackId={setDeletedPackId}\n                                              setModalDeletePackActive={setModalDeletePackActive}\n                                              setModalEditPackActive={setModalEditPackActive}\n                                              setEditablePackId={setEditablePackId}\n                                              className={styles.packs_row}\n                                />)\n                            })}\n                        </tbody>\n                    </table>\n                    <Pagination/>\n                </div>\n\n                <PackModal active={modalDeletePackActive} setActive={setModalDeletePackActive}>\n                    <div>Delete Pack</div>\n                    <div>Do you really want to remove Pack Name - Name Pack?\n                        All cards will be excluded from this course.\n                    </div>\n                    <div>\n                        <button onClick={() => setModalDeletePackActive(false)}>Cancel</button>\n                        <button onClick={deletePack}>Delete</button>\n                    </div>\n                </PackModal>\n\n                <PackModal active={modalAddPackActive} setActive={setModalAddPackActive}>\n                    <div>Add New Pack</div>\n                    <div>New pack name</div>\n                    <input\n                        type={'text'}\n                        placeholder={'Type new pack name...'}\n                        value={newPackName}\n                        onChange={changeNewPackNameHandler}/>\n                    <div>\n                        <button onClick={() => setModalAddPackActive(false)}>Cancel</button>\n                        <button onClick={addNewPack}>Save</button>\n                    </div>\n                </PackModal>\n                <PackModal active={modalEditPackActive} setActive={setModalEditPackActive}>\n                    <div>Add New Pack</div>\n                    <div>Edit pack name</div>\n                    <input\n                        type={'text'}\n                        placeholder={'Type new pack name...'}\n                        value={newPackName}\n                        onChange={changeNewPackNameHandler}/>\n                    <div>\n                        <button onClick={() => setModalEditPackActive(false)}>Cancel</button>\n                        <button onClick={editPack}>Save</button>\n                    </div>\n                </PackModal>\n            </div>\n        </>\n    );\n}\n","import React from 'react';\nimport {WithAuthRedirect} from '../../../../n4-hoc/WithAuthRedirect';\nimport { Packs } from './Packs';\n\nexport const PacksPage = () => {\n    return (\n        <WithAuthRedirect>\n            <Packs/>\n        </WithAuthRedirect>\n    );\n};","import React, {BaseHTMLAttributes, DetailedHTMLProps} from 'react'\nimport styles from './SnackBar.module.scss'\n\n\nexport type SnackBarPropsType = DetailedHTMLProps<BaseHTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    message:string\n    onClose:()=>void\n}\n\n\nexport const SnackBar:React.FC<SnackBarPropsType> = React.memo(({message,className,onClose,...props})=>{\n\n    const finallyClassName = `${styles.root} ${className}`\n\n    return (\n        <div className={finallyClassName} {...props}><div>{message}</div><button className={styles.close} onClick={onClose}></button></div>\n    )\n})","import {SnackBar} from './SnackBar';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../../../m2-bll/store';\nimport {AuthStateType} from '../../../m2-bll/r2-auth/authInitState';\nimport {setError} from \"../../../m2-bll/r2-auth/authReducer\";\n\n\n\nexport const SnackBarContainer = () => {\n    const dispatch = useDispatch()\n    const {error} = useSelector<AppRootStateType,AuthStateType>(state=> state.auth)\n    const onCloseHandler = () => {\n        dispatch(setError({error:''}))\n    }\n    return (\n        <SnackBar message={error} onClose={onCloseHandler}/>\n    )\n\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.scss'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type='radio'\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useHistory, useParams} from 'react-router-dom';\nimport {getCards, gradeCardTC} from '../../../m2-bll/r4-cards/cardsThunk';\nimport {CardType} from '../../../m3-dal/cardsAPI';\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\nimport {AppRootStateType} from '../../../m2-bll/store';\nimport styles from './Learn.module.scss';\nimport {Preloader} from '../../common/c4-Preloader/Preloader';\nimport {Backdrop} from '../../common/Backdrop/Backdrop';\nimport SuperCheckbox from '../../common/c3-SuperCheckbox/SuperCheckbox';\nimport {IUser} from '../../../m2-bll/r2-auth/authInitState';\nimport {WithAuthRedirect} from '../../../../n4-hoc/WithAuthRedirect';\n\nconst grades = ['Did not know', 'Forgot', 'A lot of thought', 'Confused', 'Knew the answer'];\n\nconst getCard = (cards: CardType[]) => {\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\n    const rand = Math.random() * sum;\n    const res = cards.reduce((acc: { sum: number, id: number}, card, i) => {\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\n        }\n        , {sum: 0, id: -1});\n\n    return cards[res.id + 1];\n}\n\nconst LearnPageContainer = () => {\n    const [isChecked, setIsChecked] = useState<boolean>(false);\n    const [first, setFirst] = useState<boolean>(true);\n    const {cards,isLoading} = useSelector((store: AppRootStateType) => store.cards);\n    const user = useSelector<AppRootStateType, IUser | null>(state=> state.auth.user)\n    const {id} = useParams<{id:string}>();\n    const history = useHistory()\n    const [isBtnChecked, setIsBtnChecked] = useState(0)\n    const onRadioHandler = (e:ChangeEvent<HTMLInputElement>) => {\n        setIsBtnChecked(+e.currentTarget.value)\n    }\n\n    const [card, setCard] = useState<CardType>({} as CardType);\n\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (first && user?._id) {\n            dispatch(getCards(id));\n            setFirst(false);\n        }\n        if (cards !== null && cards.length > 0) setCard(getCard(cards));\n\n    }, [dispatch, id, cards, first, user?._id]);\n\n\n    const gradeCard = (grade:number, id:string) => {\n            dispatch(gradeCardTC(grade, card._id))\n    }\n\n\n\n    const onNext = () => {\n        const grade = isBtnChecked + 1\n        setIsChecked(false);\n\n        if (cards !== null  && cards.length > 0) {\n            gradeCard(grade, id)\n            setCard(getCard(cards));\n        } else {\n\n        }\n    }\n\n    if(isLoading) return <Backdrop><Preloader/></Backdrop>\n\n    return (\n        <div className={`container flex ${styles.root}`}>\n            {!isChecked && <div className={`form ${styles.learn_form}`}>\n                <h2 className={styles.title}>Title</h2>\n                <div className={styles.description_wrapper}>\n                    <div className={styles.description}><div className={styles.description_title}>Question: </div><div>{card.question}</div></div>\n                </div>\n\n                <div className={'button_wrapper'}>\n                    <ButtonNya className={'cancel_button'} onClick={()=>history.push('/packs')}>Cancel</ButtonNya>\n                    <ButtonNya onClick={() => setIsChecked(true)}>Show answer</ButtonNya>\n                </div>\n\n            </div>\n            }\n\n            {isChecked && (\n                <div className={`form ${styles.learn_form}`}>\n                    <h2 className={styles.title}>Title</h2>\n                    <div className={styles.description_wrapper}>\n                        <div className={styles.description}><div className={styles.description_title}>Question: </div><div>{card.question}</div></div>\n                        <div className={styles.description}><div className={styles.description_title}>Answer: </div><div>{card.answer}</div></div>\n                    </div>\n\n\n                    <div className={styles.rate}>\n                        <div className={styles.title}>\n                            Rate yourself:\n                        </div>\n\n                        {grades.map((g, i) => (\n                            <SuperCheckbox className={styles.radio_btn} checked={i === isBtnChecked} name={'rate'} value={i} key={'grade-' + i} onChange={onRadioHandler}>{g}</SuperCheckbox>\n                        ))}\n\n                    </div>\n\n\n                    <div className={'button_wrapper'}>\n                        <ButtonNya className={'cancel_button'} onClick={()=>history.push('/packs')}>Cancel</ButtonNya>\n                        <ButtonNya onClick={onNext}>Next</ButtonNya>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default  LearnPageContainer;\n\n\nexport const LearnPage = () => {\n    return (\n        <WithAuthRedirect><LearnPageContainer/></WithAuthRedirect>\n    )\n}","export default __webpack_public_path__ + \"static/media/packsListLinkIcon.26209716.svg\";","export default __webpack_public_path__ + \"static/media/profileListLinkIcon.b2a04059.svg\";","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport paksListIcon from \"../../../../n3-styles/images/packsListLinkIcon.svg\";\nimport profileIcon from \"../../../../n3-styles/images/profileListLinkIcon.svg\";\n\nexport const HeaderMain = () => {\n    return (\n        <header className={'header'}>\n            <div className={'container header__container'}>\n                <span className={'header__title'}>it-incubator</span>\n                <nav className={'header__nav'}>\n                    <NavLink className={'header__link'}\n                             activeClassName={'header__link_active'}\n                             to={'/packs'}>\n                        <img className={'header__icon'} src={paksListIcon} alt=\"packs list\"/>\n                        <span className={'header__link__title header__link__title_packsList'}>Packs list</span>\n                    </NavLink>\n                    <NavLink className={'header__link header__link__profile'}\n                             activeClassName={'header__link_active'}\n                             to={'/profile'}>\n                        <img className={'header__icon header__icon__profile'} src={profileIcon} alt=\"profile\"/>\n                        <span className={'header__link__title'}>Profile</span>\n                    </NavLink>\n                </nav>\n            </div>\n        </header>\n    );\n};\n\n","export default __webpack_public_path__ + \"static/media/avatar.927ffef4.png\";","import React from 'react'\nimport {Field, Form, FormikProps} from 'formik';\nimport {InputField} from '../../common/alternative/InputField/InputField';\nimport {ButtonNya} from '../../common/alternative/Button/ButtonNya';\nimport styles from './PersonalInformation.module.scss'\nimport avatar from '../../../../n3-styles/images/avatar.png'\n\ntype PersonalInformationPropsType = FormikProps<any> & {\n    error?: string,\n    loading?: boolean\n}\n\nexport const PersonalInformation:React.FC<PersonalInformationPropsType> = React.memo(({handleSubmit,handleReset,loading})=>{\n    return (\n        <div className={`${styles.root} container flex`}>\n            <Form className={'form'} onSubmit={handleSubmit} onReset={handleReset}>\n                <div className={styles.img_wrapper}>\n                    <img className='img' src={avatar} alt=\"\"/>\n                </div>\n                <h3>Personal Information</h3>\n                <Field name={'name'}  component={InputField} label={'NickName'}/>\n                <div className='button_wrapper'>\n                    <ButtonNya type=\"reset\" disabled={loading} className={'cancel_button'}>Cancel</ButtonNya>\n                    <ButtonNya type=\"submit\" disabled={loading} >Submit</ButtonNya>\n                </div>\n            </Form>\n        </div>\n    )\n})\n","import React from 'react'\nimport {PersonalInformation} from './PersonalInformation'\nimport {Formik} from 'formik';\nimport {infoTC} from '../../../m2-bll/r2-auth/authThunk';\nimport {useHistory} from 'react-router-dom'\nimport {useDispatch} from 'react-redux';\n\n\ntype ErrorsValueType = {\n    name?: string,\n}\n\n\nexport const PersonalInformationContainer: React.FC = React.memo(() => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n\nreturn (\n    <Formik\n        initialValues={{name: ''}}\n        validate={values => {\n            const errors: ErrorsValueType = {};\n\n            if (\n                !values.name\n            ) {\n                errors.name = 'Enter a nickname'\n            }\n\n            return errors;\n        }}\n        onSubmit={(values) => {\n            dispatch(infoTC(values.name))\n            history.push('/profile')\n        }}\n        onReset={() => {\n            history.push('/profile')\n        }\n        }\n    >\n        {(props) => (\n            <PersonalInformation {...props}/>\n        )}\n    </Formik>\n    )\n})","import React from 'react'\nimport {PersonalInformationContainer} from './PersonalInformationContainer';\n\nexport const PersonalInformationPage = () => {\n    return (\n        <PersonalInformationContainer/>\n    )\n}","import React, {useEffect} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport {Test} from '../../n2-features/f0-test/Test';\nimport {Registration} from './components/Register/Registration';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRootStateType} from '../m2-bll/store';\nimport {LoginPage} from './components/Login/LoginPage';\nimport {Preloader} from './common/c4-Preloader/Preloader';\nimport {Profile} from './components/Profile/Profile'\nimport {ForgotPage} from './components/Forgot/ForgotPage';\nimport {NewPasswordPage} from './components/NewPassword/NewPasswordPage';\nimport {AppStateType} from '../m2-bll/r1-app/appInitState';\nimport {AuthStateType} from '../m2-bll/r2-auth/authInitState';\nimport {initializingTC} from '../m2-bll/r1-app/appThunk';\nimport {CardsTable} from './components/Cards/CardsTable';\nimport {PacksPage} from './components/Packs/PacksPage';\nimport {SnackBarContainer} from './common/SnackBar/SnackBarContainer';\nimport Learn from './components/LearnPage/Learn';\nimport {HeaderMain} from './components/HeaderMain/HeaderMain';\nimport {PersonalInformationPage} from './components/PersonalInformation/PersonalInformationPage';\n\n\nconst App = () => {\n    const {loading} = useSelector<AppRootStateType, AppStateType>(state => state.app)\n    const {isLogin, error} = useSelector<AppRootStateType, AuthStateType>(state => state.auth)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (!isLogin) {\n            dispatch(initializingTC())\n        }\n    }, [dispatch])\n    if (loading) {\n        return <div className={'container'} style={{height: '100vh'}}><Preloader/></div>\n    }\n    return (\n        <div className=\"App\">\n            {isLogin && <HeaderMain/>}\n            <Switch>\n                <Route path={'/learn/:id?'} render={()=> <Learn/>}/>\n                <Route path={'/login'} render={() => <LoginPage/>}/>\n                <Route path={'/registration'} render={() => <Registration/>}/>\n                <Route path={'/profile'} render={() => <Profile/>}/>\n                <Route path={'/forgot'} render={() => <ForgotPage/>}/>\n                <Route path={'/new-password/:token?'} exact render={() => <NewPasswordPage/>}/>\n                <Route path={'/test'} render={() => <Test/>}/>\n                <Route path={'/packs'} render={() => <PacksPage/>}/>\n                <Route path={'/cards/:id?'} render={() => <CardsTable/>}/>\n                <Route path={'/personal-information'} render={()=> <PersonalInformationPage/>}/>\n                <Route path={'/404'} render={() => <div style={{'fontSize': '60px'}}>404: PAGE NOT FOUND</div>}/>\n                <Route path={'/'} exact render={() => <Redirect to={'/profile'}/>}/>\n                <Redirect from={'*'} to={'/404'}/>\n            </Switch>\n\n            {error && <SnackBarContainer/>}\n\n        </div>\n    );\n}\n\nexport default App;\n","import {ThunkAction} from 'redux-thunk';\nimport {AppRootStateType} from '../store';\nimport {appActions, AppActionsType} from './appActions';\nimport {authAPI} from '../../m3-dal/authAPI';\nimport {setLoginStatus, setUserData} from \"../r2-auth/authReducer\";\n// import {authActions, AuthActionsType} from '../r2-auth/authActions';\n\nexport const initializingTC = (): ThunkAction<void, AppRootStateType, {}, AppActionsType | any> => async (dispatch) => {\n    dispatch(appActions.setLoading(true))\n    try {\n        const data = await authAPI.me()\n        console.log('INIT: ', data)\n        dispatch(setUserData(data))\n        dispatch(appActions.setSuccess(true))\n    } catch (e) {\n        console.log('INIT ERROR: ', e.response)\n        e.response ? dispatch(appActions.setError(e.response.data.error)) : dispatch(appActions.setError(`Error: ${e.message}`))\n        dispatch(setLoginStatus({isLogin:false}))\n    } finally {\n        dispatch(appActions.setLoading(false))\n        setTimeout(()=>dispatch(appActions.setError('')),1000)\n    }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type AppStateType = {\n    loading: boolean\n    successInitializing: boolean\n    error: string\n}\n\nexport const initialState = {\n    loading: true,\n    successInitializing: false,\n    error: ''\n}","export type CardPacksType = {\n    _id : string\n    user_id : string\n    user_name : string\n    private : boolean\n    name : string\n    path : string\n    grade : number\n    shots : number\n    cardsCount : number\n    type : string\n    rating : number\n    created : string\n    updated : string\n    more_id : string\n    __v : number\n}\n\nexport const packsInitialState = {\n    isLoading: false,\n    cardPacks: [] as Array<CardPacksType>,\n    packsType: 'All' as 'My' | 'All',\n    page: 1,\n    pageCount: 4,\n    cardPacksTotalCount: 1000,\n    minCardsCount: 0,\n    maxCardsCount: 103\n}\n\nexport type PacksInitialStateType = typeof packsInitialState;\n\n\n","export const FindPaginationInitialState: FindPaginationInitialStateType = {\n    minPrice: 0,\n    maxPrice: 100,\n    productName: '',\n    page: 1,\n    pageCount: 10,\n    cardPacksTotalCount: 120,\n    direction:0,\n    sortObject: '',\n}\n\n\nexport type FindPaginationInitialStateType = {\n    minPrice: number\n    maxPrice: number\n    productName: string\n    page: number\n    pageCount: number\n    cardPacksTotalCount: number\n    direction:number\n    sortObject: string\n}","import {CardType} from \"../../m3-dal/cardsAPI\";\n\nexport const cardsInitialState = {\n    isLoading: true,\n    cards: [] as Array<CardType>,\n    cardsTotalCount: null as null | number,\n    maxGrade: null as null | number,\n    minGrade: null as null | number,\n    page: null as null | number,\n    pageCount: null as null | number,\n    packUserId: null as null | string\n}\n\nexport type CardsInitialStateType = typeof cardsInitialState;","import thunkMiddleware from 'redux-thunk'\nimport {combineReducers} from 'redux'\nimport {authReducer} from './r2-auth/authReducer';\nimport {appReducer} from './r1-app/appReducer';\nimport {packsReducer} from './r3-packs/packsReducer';\nimport {findPaginationReducer} from './r5-findPagination/findPaginationReducer';\nimport {DEV_VERSION} from '../../config';\nimport {cardsReducer} from \"./r4-cards/cardsReducer\";\nimport {configureStore} from \"@reduxjs/toolkit\";\n\n\nconst rootReducer = combineReducers({\n    app: appReducer,\n    auth: authReducer,\n    packs: packsReducer,\n    findPagination:findPaginationReducer,\n    cards: cardsReducer\n})\n\n// export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\nexport const store  = configureStore({\n    reducer:rootReducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware),\n\n})\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\nif (DEV_VERSION) {\n    // @ts-ignore\n    window.store = store; // for dev\n}","import {AppEvents} from '../events';\nimport {AppActionsType} from './appActions';\nimport {AppStateType, initialState} from './appInitState';\n\n\nexport const appReducer = (state = initialState, action: AppActionsType): AppStateType => {\n    switch (action.type) {\n        case AppEvents.SET_APP_LOADING:\n            return {...state, loading: action.predicate}\n        case AppEvents.SET_APP_SUCCESS:\n            return {...state, successInitializing: true}\n        case AppEvents.SET_APP_ERROR:\n            return {...state, error: action.error}\n        default:\n            return state\n    }\n}\n\n","\nimport {PacksActionsType} from \"./packsActions\";\nimport {packsInitialState, PacksInitialStateType} from \"./packsInitialState\";\nimport {PacksEvents} from '../events';\n\nexport const packsReducer = (state: PacksInitialStateType = packsInitialState, action: PacksActionsType): PacksInitialStateType => {\n    switch(action.type) {\n        case PacksEvents.SET_CARD_PACKS:\n            return {...state, cardPacks: action.cardPacks}\n        case PacksEvents.SET_CARD_PACKS_LOADING:\n            return {...state, isLoading: action.isLoading}\n        default:\n            return state\n    }\n}","import {FindPaginationActionsType} from './findPaginationAction'\nimport {FindPaginationInitialState, FindPaginationInitialStateType} from './findPaginationInitialState';\nimport {FindPaginationEvents} from '../events';\n\n\nexport const findPaginationReducer = (state = FindPaginationInitialState, action: FindPaginationActionsType): FindPaginationInitialStateType => {\n    switch (action.type) {\n        case FindPaginationEvents.SET_PRODUCT_NAME:\n            return {...state, productName: action.productName}\n        case FindPaginationEvents.SET_MIN_MAX:\n            return {...state, minPrice:action.minPrice, maxPrice:action.maxPrice }\n        case FindPaginationEvents.SET_PAGE_COUNT:\n            return {...state, pageCount:action.pageCount}\n        case FindPaginationEvents.SET_CARD_PACKS_TOTAL_COUNT:\n            return {...state, cardPacksTotalCount:action.cardPacksTotalCount}\n        case FindPaginationEvents.SET_CURRENT_PAGE:\n            return {...state, page:action.page}\n        case FindPaginationEvents.SET_SORT:\n            return {...state, direction:action.direction, sortObject:action.sortObject}\n        default:\n            return state\n    }\n}\n","import {cardsInitialState, CardsInitialStateType} from \"./cardsInitialState\";\nimport {CardsActionsType} from \"./cardsActions\";\nimport {CardsEvents} from '../events';\n\nexport const cardsReducer = (\n    state: CardsInitialStateType = cardsInitialState,\n    action: CardsActionsType): CardsInitialStateType => {\n    switch(action.type) {\n        case CardsEvents.SET_CARDS:\n            return {...state, ...action.cardsInfo}\n        case CardsEvents.SET_CARDS_LOADING:\n            return {...state, isLoading: action.isLoading}\n        default: return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport './index.scss';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './n1-main/m2-bll/store';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}